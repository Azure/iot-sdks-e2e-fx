{
  "swagger": "2.0",
  "info": {
    "title": "Azure IOT End-to-End Test Wrapper Rest Api",
    "description": "REST API definition for End-to-end testing of the Azure IoT SDKs.  All SDK APIs that are tested by our E2E tests need to be defined in this file.  This file takes some liberties with the API definitions.  In particular, response schemas are undefined, and error responses are also undefined.",
    "version": "1.0.0"
  },
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "wrapper",
      "description": "APIs that transcend the individual SDKs"
    },
    {
      "name": "module",
      "description": "ModuleClient APIs"
    },
    {
      "name": "device",
      "description": "DeviceClient APIs"
    },
    {
      "name": "service",
      "description": "ServiceClient APIs"
    },
    {
      "name": "registry",
      "description": "registry APIs"
    },
    {
      "name": "net",
      "description": "network control APIs"
    }
  ],
  "paths": {
    "/wrapper/capabilities": {
      "$ref": "wrapper.json#/capabilities"
    },
    "/wrapper/cleanup": {
      "$ref": "wrapper.json#/cleanup"
    },
    "/wrapper/message": {
      "$ref": "wrapper.json#/message"
    },
    "/wrapper/flags": {
      "$ref": "wrapper.json#/flags"
    },
    "/wrapper/networkDisconnect/{transportType}/{disconnectionType}": {
      "$ref": "wrapper.json#/networkDisconnect"
    },
    "/wrapper/command": {
      "$ref": "wrapper.json#/command"
    },
    "/wrapper/networkReconnect": {
      "$ref": "wrapper.json#/networkReconnect"
    },
    "/registry/connect": {
      "$ref": "registry.json#/connect"
    },
    "/registry/{connectionId}/disconnect/": {
      "$ref": "registry.json#/disconnect"
    },
    "/registry/{connectionId}/moduleTwin/{deviceId}/{moduleId}": {
      "$ref": "registry.json#/moduleTwin"
    },
    "/registry/{connectionId}/deviceTwin/{deviceId}": {
      "$ref": "registry.json#/deviceTwin"
    },
    "/module/connect/{transportType}": {
      "$ref": "module.json#/connect"
    },
    "/module/{connectionId}/disconnect": {
      "$ref": "module.json#/disconnect"
    },
    "/module/connectFromEnvironment/{transportType}": {
      "$ref": "module.json#/connectFromEnvironment"
    },
    "/module/createFromConnectionstring/{transportType}": {
      "$ref": "module.json#/createFromConnectionString"
    },
    "/module/createFromEnvironment/{transportType}": {
      "$ref": "module.json#/createFromEnvironment"
    },
    "/module/createFromX509/{transportType}": {
      "$ref": "module.json#/createFromX509"
    },
    "/module/{connectionId}/connect2": {
      "$ref": "module.json#/connect2"
    },
    "/module/{connectionId}/reconnect": {
      "$ref": "module.json#/reconnect"
    },
    "/module/{connectionId}/disconnect2": {
      "$ref": "module.json#/disconnect2"
    },
    "/module/{connectionId}/destroy": {
      "$ref": "module.json#/destroy"
    },
    "/module/{connectionId}/enableTwin": {
      "$ref": "module.json#/enableTwin"
    },
    "/module/{connectionId}/enableMethods": {
      "$ref": "module.json#/enableMethods"
    },
    "/module/{connectionId}/enableInputMessages": {
      "$ref": "module.json#/enableInputMessages"
    },
    "/module/{connectionId}/twin": {
      "$ref": "module.json#/twin"
    },
    "/module/{connectionId}/twinDesiredPropPatch": {
      "$ref": "module.json#/twinDesiredPropPatch"
    },
    "/module/{connectionId}/event": {
      "$ref": "module.json#/event"
    },
    "/module/{connectionId}/outputEvent/{outputName}": {
      "$ref": "module.json#/outputEvent"
    },
    "/module/{connectionId}/inputMessage/{inputName}": {
      "$ref": "module.json#/inputMessage"
    },
    "/module/{connectionId}/roundtripMethodCall/{methodName}": {
      "$ref": "module.json#/roundtripMethodCall"
    },
    "/module/{connectionId}/moduleMethod/{deviceId}/{moduleId}": {
      "$ref": "module.json#/moduleMethod"
    },
    "/module/{connectionId}/deviceMethod/{deviceId}": {
      "$ref": "module.json#/deviceMethod"
    },
    "/module/{connectionId}/connectionStatus": {
      "$ref": "module.json#/connectionStatus"
    },
    "/module/{connectionId}/connectionStatusChange": {
      "$ref": "module.json#/connectionStatusChange"
    },
    "/service/connect": {
      "$ref": "service.json#/connect"
    },
    "/service/{connectionId}/disconnect/": {
      "$ref": "service.json#/disconnect"
    },
    "/service/{connectionId}/moduleMethod/{deviceId}/{moduleId}": {
      "$ref": "service.json#/moduleMethod"
    },
    "/service/{connectionId}/deviceMethod/{deviceId}": {
      "$ref": "service.json#/deviceMethod"
    },
    "/service/{connectionId}/sendC2d": {
      "$ref": "service.json#/sendC2d"
    },
    "/device/connect/{transportType}": {
      "$ref": "device.json#/connect"
    },
    "/device/{connectionId}/disconnect": {
      "$ref": "device.json#/disconnect"
    },
    "/device/createFromConnectionString/{transportType}": {
      "$ref": "device.json#/createFromConnectionString"
    },
    "/device/createFromX509/{transportType}": {
      "$ref": "device.json#/createFromX509"
    },
    "/device/{connectionId}/connect2": {
      "$ref": "device.json#/connect2"
    },
    "/device/{connectionId}/reconnect": {
      "$ref": "device.json#/reconnect"
    },
    "/device/{connectionId}/disconnect2": {
      "$ref": "device.json#/disconnect2"
    },
    "/device/{connectionId}/destroy": {
      "$ref": "device.json#/destroy"
    },
    "/device/{connectionId}/enableMethods": {
      "$ref": "device.json#/enableMethods"
    },
    "/device/{connectionId}/roundtripMethodCall/{methodName}": {
      "$ref": "device.json#/roundtripMethodCall"
    },
    "/device/{connectionId}/enableC2dMessages": {
      "$ref": "device.json#/enableC2dMessages"
    },
    "/device/{connectionId}/event": {
      "$ref": "device.json#/event"
    },
    "/device/{connectionId}/c2dMessage": {
      "$ref": "device.json#/c2dMessage"
    },
    "/device/{connectionId}/enableTwin": {
      "$ref": "device.json#/enableTwin"
    },
    "/device/{connectionId}/twin": {
      "$ref": "device.json#/twin"
    },
    "/device/{connectionId}/twinDesiredPropPatch": {
      "$ref": "device.json#/twinDesiredPropPatch"
    },
    "/device/{connectionId}/connectionStatus": {
      "$ref": "device.json#/connectionStatus"
    },
    "/device/{connectionId}/connectionStatusChange": {
      "$ref": "device.json#/connectionStatusChange"
    },
    "/net/setDestination/{ip}/{transportType}": {
      "$ref": "net.json#/setDestination"
    },
    "/net/disconnect/{disconnectType}": {
      "$ref": "net.json#/disconnect"
    },
    "/net/reconnect": {
      "$ref": "net.json#/reconnect"
    },
    "/net/disconnectAfterC2D/{disconnectType}": {
      "$ref": "net.json#/disconnectAfterC2d"
    },
    "/net/disconnectAfterD2c/{disconnectType}": {
      "$ref": "net.json#/disconnectAfterD2c"
    }
  }
}
