versions pytest-3.8.2, py-1.8.0, python-3.6.6.final.0
cwd=/home/bertk/repos/e2e-fx/test-runner
args=['--testdox', '--timeout', '90', '--showlocals', '--tb=short', '--scenario=edgehub_module', '--pythonpreview-wrapper', '--local', '--debug', '-x', '--pdb']

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x7f0a72d93860>
    pytest_plugin_registered [hook]
        plugin: <Session 'test-runner'>
        manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x7f0a72d93860>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x7f0a6faa0ba8>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x7f0a6faa0cf8>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: unittest.mock [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x7f0a6fa49940>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.debugging.PdbInvoke object at 0x7f0a6fa61278>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: py._io [assertion]
    early skip of rewriting module: py._io.terminalwriter [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x7f0a72d93860>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/mark/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.resultlog' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/resultlog.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_mock' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_mock.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_testdox.plugin' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_testdox/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_asyncio.plugin' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_asyncio/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_cov.plugin' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_cov/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_repeat' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_repeat.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_timeout' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_timeout.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.capture.CaptureManager object at 0x7f0a7282bc18>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'conftest' from '/home/bertk/repos/e2e-fx/test-runner/conftest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session 'test-runner'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x7f0a6faa0ba8>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x7f0a6faa0cf8>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x7f0a6fa49940>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.debugging.PdbInvoke object at 0x7f0a6fa61278>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x7f0a6fa61320>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x7f0a72d93860>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/mark/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.resultlog' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/resultlog.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_mock' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_mock.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_testdox.plugin' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_testdox/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_asyncio.plugin' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_asyncio/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_cov.plugin' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_cov/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_repeat' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_repeat.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_timeout' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_timeout.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.capture.CaptureManager object at 0x7f0a7282bc18>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'conftest' from '/home/bertk/repos/e2e-fx/test-runner/conftest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session 'test-runner'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x7f0a6faa0ba8>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x7f0a6faa0cf8>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x7f0a6fa49940>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.debugging.PdbInvoke object at 0x7f0a6fa61278>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x7f0a6fa61320>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <pytest_testdox.plugin.TestdoxTerminalReporter object at 0x7f0a6fa74160>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session 'test-runner'>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x7f0a72d93860>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/mark/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.resultlog' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/resultlog.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_mock' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_mock.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_testdox.plugin' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_testdox/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_asyncio.plugin' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_asyncio/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_cov.plugin' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_cov/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_repeat' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_repeat.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_timeout' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_timeout.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.capture.CaptureManager object at 0x7f0a7282bc18>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'conftest' from '/home/bertk/repos/e2e-fx/test-runner/conftest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session 'test-runner'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x7f0a6faa0ba8>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x7f0a6faa0cf8>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x7f0a6fa49940>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.debugging.PdbInvoke object at 0x7f0a6fa61278>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x7f0a6fa61320>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <pytest_testdox.plugin.TestdoxTerminalReporter object at 0x7f0a6fa74160>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x7f0a6faa0ac8>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0a76bb4828>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x7f0a72d93860>
          startdir: /home/bertk/repos/e2e-fx/test-runner
      finish pytest_report_header --> [['timeout: 90.0s\ntimeout method: signal\ntimeout func_only: False'], ['rootdir: /home/bertk/repos/e2e-fx/test-runner, inifile: pytest.ini', 'plugins: mock-1.10.4, testdox-1.1.1, asyncio-0.10.0, cov-2.7.1, repeat-0.7.0, timeout-1.3.2'], ['using: pytest-3.8.2 pylib-1.8.0', 'setuptools registered plugins:', '  pytest-mock-1.10.4 at /home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_mock.py', '  pytest-testdox-1.1.1 at /home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_testdox/plugin.py', '  pytest-asyncio-0.10.0 at /home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_asyncio/plugin.py', '  pytest-cov-2.7.1 at /home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_cov/plugin.py', '  pytest-repeat-0.7.0 at /home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_repeat.py', '  pytest-timeout-1.3.2 at /home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest_timeout.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session 'test-runner'>
    perform_collect <Session 'test-runner'> ['/home/bertk/repos/e2e-fx/test-runner'] [collection]
        pytest_collectstart [hook]
            collector: <Session 'test-runner'>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session 'test-runner'>
        processing argument /home/bertk/repos/e2e-fx/test-runner [collection]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                parent: <Session 'test-runner'>
              pytest_pycollect_makemodule [hook]
                  path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                  parent: <Session 'test-runner'>
              finish pytest_pycollect_makemodule --> <Package '/home/bertk/repos/e2e-fx/test-runner'> [hook]
            finish pytest_collect_file --> [<Package '/home/bertk/repos/e2e-fx/test-runner'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/adapters
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/adapters
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/models
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/models
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/.pytest_cache
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/README.md
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/README.md
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/base_client_tests.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/base_client_tests.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/c2d_tests.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/c2d_tests.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/conftest.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/conftest.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/connections.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/connections.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edgehub_control.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edgehub_control.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/fixtures.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/fixtures.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/input_output_tests.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/input_output_tests.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/method_tests.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/method_tests.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/pytest.ini
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/pytest.ini
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/pytestdebug.log
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/pytestdebug.log
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/requirements.txt
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/requirements.txt
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/runtime_capabilities.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/runtime_capabilities.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/runtime_config.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/runtime_config.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/runtime_config_serializer.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/runtime_config_serializer.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/runtime_config_templates.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/runtime_config_templates.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/sample_content.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/sample_content.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/scenarios.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/scenarios.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/telemetry_tests.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/telemetry_tests.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/test_edgehub_leaf_device.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/test_edgehub_leaf_device.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              pytest_pycollect_makemodule [hook]
                  path: /home/bertk/repos/e2e-fx/test-runner/test_edgehub_leaf_device.py
                  parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              finish pytest_pycollect_makemodule --> <Module 'test_edgehub_leaf_device.py'> [hook]
            finish pytest_collect_file --> [<Module 'test_edgehub_leaf_device.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/test_edgehub_module.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/test_edgehub_module.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              pytest_pycollect_makemodule [hook]
                  path: /home/bertk/repos/e2e-fx/test-runner/test_edgehub_module.py
                  parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              finish pytest_pycollect_makemodule --> <Module 'test_edgehub_module.py'> [hook]
            finish pytest_collect_file --> [<Module 'test_edgehub_module.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/test_iothub_device.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/test_iothub_device.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              pytest_pycollect_makemodule [hook]
                  path: /home/bertk/repos/e2e-fx/test-runner/test_iothub_device.py
                  parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              finish pytest_pycollect_makemodule --> <Module 'test_iothub_device.py'> [hook]
            finish pytest_collect_file --> [<Module 'test_iothub_device.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/test_iothub_module.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/test_iothub_module.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              pytest_pycollect_makemodule [hook]
                  path: /home/bertk/repos/e2e-fx/test-runner/test_iothub_module.py
                  parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              finish pytest_pycollect_makemodule --> <Module 'test_iothub_module.py'> [hook]
            finish pytest_collect_file --> [<Module 'test_iothub_module.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/twin_tests.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/twin_tests.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/utilities.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/utilities.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/__init__.cpython-36.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/__init__.cpython-36.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/base_client_tests.cpython-36.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/base_client_tests.cpython-36.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/c2d_tests.cpython-36.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/c2d_tests.cpython-36.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/conftest.cpython-36-PYTEST.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/conftest.cpython-36-PYTEST.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/connections.cpython-36.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/connections.cpython-36.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/edgehub_control.cpython-36.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/edgehub_control.cpython-36.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/fixtures.cpython-36.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/fixtures.cpython-36.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/input_output_tests.cpython-36.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/input_output_tests.cpython-36.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/method_tests.cpython-36.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/method_tests.cpython-36.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/runtime_capabilities.cpython-36.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/runtime_capabilities.cpython-36.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/runtime_config.cpython-36.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/runtime_config.cpython-36.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/runtime_config_serializer.cpython-36.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/runtime_config_serializer.cpython-36.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/runtime_config_templates.cpython-36.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/runtime_config_templates.cpython-36.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/sample_content.cpython-36.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/sample_content.cpython-36.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/scenarios.cpython-36.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/scenarios.cpython-36.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/telemetry_tests.cpython-36.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/telemetry_tests.cpython-36.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/test_edgehub_leaf_device.cpython-36-PYTEST.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/test_edgehub_leaf_device.cpython-36-PYTEST.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/test_edgehub_module.cpython-36-PYTEST.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/test_edgehub_module.cpython-36-PYTEST.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/test_iothub_device.cpython-36-PYTEST.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/test_iothub_device.cpython-36-PYTEST.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/test_iothub_module.cpython-36-PYTEST.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/test_iothub_module.cpython-36-PYTEST.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/twin_tests.cpython-36.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/twin_tests.cpython-36.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/utilities.cpython-36.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/__pycache__/utilities.cpython-36.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/adapters/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/adapters/__init__.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              pytest_pycollect_makemodule [hook]
                  path: /home/bertk/repos/e2e-fx/test-runner/adapters/__init__.py
                  parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              finish pytest_pycollect_makemodule --> <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'> [hook]
            finish pytest_collect_file --> [<Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/__pycache__
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/__pycache__
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/__pycache__
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/__pycache__
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_connect_disconnect_fi.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_connect_disconnect_fi.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              pytest_pycollect_makemodule [hook]
                  path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_connect_disconnect_fi.py
                  parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              finish pytest_pycollect_makemodule --> <Module 'test_connect_disconnect_fi.py'> [hook]
            finish pytest_collect_file --> [<Module 'test_connect_disconnect_fi.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_device_methods_fi.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_device_methods_fi.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              pytest_pycollect_makemodule [hook]
                  path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_device_methods_fi.py
                  parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              finish pytest_pycollect_makemodule --> <Module 'test_device_methods_fi.py'> [hook]
            finish pytest_collect_file --> [<Module 'test_device_methods_fi.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_methods_fi.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_methods_fi.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              pytest_pycollect_makemodule [hook]
                  path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_methods_fi.py
                  parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              finish pytest_pycollect_makemodule --> <Module 'test_module_methods_fi.py'> [hook]
            finish pytest_collect_file --> [<Module 'test_module_methods_fi.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_output_routed_upstream_fi.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_output_routed_upstream_fi.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              pytest_pycollect_makemodule [hook]
                  path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_output_routed_upstream_fi.py
                  parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              finish pytest_pycollect_makemodule --> <Module 'test_module_output_routed_upstream_fi.py'> [hook]
            finish pytest_collect_file --> [<Module 'test_module_output_routed_upstream_fi.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_send_telemetry_fi.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_send_telemetry_fi.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              pytest_pycollect_makemodule [hook]
                  path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_send_telemetry_fi.py
                  parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              finish pytest_pycollect_makemodule --> <Module 'test_module_send_telemetry_fi.py'> [hook]
            finish pytest_collect_file --> [<Module 'test_module_send_telemetry_fi.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_to_module_routing_fi.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_to_module_routing_fi.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              pytest_pycollect_makemodule [hook]
                  path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_to_module_routing_fi.py
                  parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              finish pytest_pycollect_makemodule --> <Module 'test_module_to_module_routing_fi.py'> [hook]
            finish pytest_collect_file --> [<Module 'test_module_to_module_routing_fi.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_twin_desired_properties_fi.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_twin_desired_properties_fi.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              pytest_pycollect_makemodule [hook]
                  path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_twin_desired_properties_fi.py
                  parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              finish pytest_pycollect_makemodule --> <Module 'test_module_twin_desired_properties_fi.py'> [hook]
            finish pytest_collect_file --> [<Module 'test_module_twin_desired_properties_fi.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_twin_reported_properties_fi.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_twin_reported_properties_fi.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              pytest_pycollect_makemodule [hook]
                  path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_twin_reported_properties_fi.py
                  parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              finish pytest_pycollect_makemodule --> <Module 'test_module_twin_reported_properties_fi.py'> [hook]
            finish pytest_collect_file --> [<Module 'test_module_twin_reported_properties_fi.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_connect_disconnect_fi.cpython-36-PYTEST.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_connect_disconnect_fi.cpython-36-PYTEST.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_device_methods_fi.cpython-36-PYTEST.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_device_methods_fi.cpython-36-PYTEST.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_module_methods_fi.cpython-36-PYTEST.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_module_methods_fi.cpython-36-PYTEST.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_module_output_routed_upstream_fi.cpython-36-PYTEST.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_module_output_routed_upstream_fi.cpython-36-PYTEST.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_module_send_telemetry_fi.cpython-36-PYTEST.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_module_send_telemetry_fi.cpython-36-PYTEST.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_module_to_module_routing_fi.cpython-36-PYTEST.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_module_to_module_routing_fi.cpython-36-PYTEST.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_module_twin_desired_properties_fi.cpython-36-PYTEST.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_module_twin_desired_properties_fi.cpython-36-PYTEST.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_module_twin_reported_properties_fi.cpython-36-PYTEST.pyc
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_module_twin_reported_properties_fi.cpython-36-PYTEST.pyc
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/models/__pycache__
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/models/__pycache__
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/models/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/models/__init__.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              pytest_pycollect_makemodule [hook]
                  path: /home/bertk/repos/e2e-fx/test-runner/models/__init__.py
                  parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              finish pytest_pycollect_makemodule --> <Package '/home/bertk/repos/e2e-fx/test-runner/models'> [hook]
            finish pytest_collect_file --> [<Package '/home/bertk/repos/e2e-fx/test-runner/models'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/__pycache__
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/__pycache__
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/__init__.py
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/__init__.py
                parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              pytest_pycollect_makemodule [hook]
                  path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/__init__.py
                  parent: <Package '/home/bertk/repos/e2e-fx/test-runner'>
              finish pytest_pycollect_makemodule --> <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi'> [hook]
            finish pytest_collect_file --> [<Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/__pycache__
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/__pycache__
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__pycache__
                config: <_pytest.config.Config object at 0x7f0a72d93860>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__pycache__
                parent: <Session 'test-runner'>
            finish pytest_collect_directory --> None [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=15 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=15 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Module 'test_edgehub_leaf_device.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'test_edgehub_leaf_device.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'test_edgehub_leaf_device.py'>
      find_module called for: test_edgehub_leaf_device [assertion]
      matched test file '/home/bertk/repos/e2e-fx/test-runner/test_edgehub_leaf_device.py' [assertion]
      found cached rewritten pyc for '/home/bertk/repos/e2e-fx/test-runner/test_edgehub_leaf_device.py' [assertion]
      early skip of rewriting module: base_client_tests [assertion]
      early skip of rewriting module: method_tests [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __name__
            obj: test_edgehub_leaf_device
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __package__
            obj: 
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __spec__
            obj: ModuleSpec(name='test_edgehub_leaf_device', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>, origin='/home/bertk/repos/e2e-fx/test-runner/test_edgehub_leaf_device.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __file__
            obj: /home/bertk/repos/e2e-fx/test-runner/test_edgehub_leaf_device.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __cached__
            obj: /home/bertk/repos/e2e-fx/test-runner/__pycache__/test_edgehub_leaf_device.cpython-36-PYTEST.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'BufferError': <class 'BufferError'>, 'MemoryError': <class 'MemoryError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': See https://www.python.org/psf/license/, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: pytest
            obj: <module 'pytest' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: BaseClientTests
            obj: <class 'base_client_tests.BaseClientTests'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: ReceiveMethodCallFromServiceTests
            obj: <class 'method_tests.ReceiveMethodCallFromServiceTests'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: ReceiveMethodCallFromModuleTests
            obj: <class 'method_tests.ReceiveMethodCallFromModuleTests'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: TestIotHubModuleClient
            obj: <class 'test_edgehub_leaf_device.TestIotHubModuleClient'>
        finish pytest_pycollect_makeitem --> <Class 'TestIotHubModuleClient'> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __new__
            obj: <built-in method __new__ of type object at 0x55ebbe0e3500>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_leaf_device.py'>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'test_edgehub_leaf_device.py' lenresult=1 outcome='passed'> [hook]
    genitems <Class 'TestIotHubModuleClient'> [collection]
      pytest_collectstart [hook]
          collector: <Class 'TestIotHubModuleClient'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class 'TestIotHubModuleClient'>
      finish pytest_make_collect_report --> <CollectReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient' lenresult=1 outcome='passed'> [hook]
    genitems <Instance '()'> [collection]
      pytest_collectstart [hook]
          collector: <Instance '()'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Instance '()'>
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __module__
            obj: test_edgehub_leaf_device
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: client
            obj: <function TestIotHubModuleClient.client at 0x7f0a6fa18730>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: pytestmark
            obj: [Mark(name='describe', args=('Edge Leaf Device',), kwargs={}), Mark(name='testgroup_edgehub_module_client', args=(), kwargs={})]
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_client_connect_disconnect
            obj: <function BaseClientTests.test_client_connect_disconnect at 0x7f0a6fa181e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6fa215c0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_client_connect_disconnect'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __dict__
            obj: <attribute '__dict__' of 'BaseClientTests' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __weakref__
            obj: <attribute '__weakref__' of 'BaseClientTests' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_method_call_invoked_from_service
            obj: <function ReceiveMethodCallFromServiceTests.test_method_call_invoked_from_service at 0x7f0a6fa18510>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6fa21a58>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_method_call_invoked_from_service'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_method_call_invoked_from_friend
            obj: <function ReceiveMethodCallFromModuleTests.test_method_call_invoked_from_friend at 0x7f0a6fa18598>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6fa21f98>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_method_call_invoked_from_friend'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_module_client_connect_enable_methods_disconnect
            obj: <function BaseReceiveMethodCallTests.test_module_client_connect_enable_methods_disconnect at 0x7f0a6fa18488>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6fa2f588>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_client_connect_enable_methods_disconnect'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __init__
            obj: <slot wrapper '__init__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __new__
            obj: <built-in method __new__ of type object at 0x55ebbe0ea4c0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __dir__
            obj: <method '__dir__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()' lenresult=4 outcome='passed'> [hook]
    genitems <Function 'test_client_connect_disconnect'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_client_connect_disconnect'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_client_connect_enable_methods_disconnect'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_client_connect_enable_methods_disconnect'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_method_call_invoked_from_service'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_method_call_invoked_from_service'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_method_call_invoked_from_friend'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_method_call_invoked_from_friend'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test_edgehub_leaf_device.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module 'test_edgehub_module.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'test_edgehub_module.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'test_edgehub_module.py'>
      find_module called for: test_edgehub_module [assertion]
      matched test file '/home/bertk/repos/e2e-fx/test-runner/test_edgehub_module.py' [assertion]
      found cached rewritten pyc for '/home/bertk/repos/e2e-fx/test-runner/test_edgehub_module.py' [assertion]
      early skip of rewriting module: telemetry_tests [assertion]
      early skip of rewriting module: models [assertion]
      early skip of rewriting module: models.hub_event [assertion]
      early skip of rewriting module: sample_content [assertion]
      early skip of rewriting module: twin_tests [assertion]
      early skip of rewriting module: input_output_tests [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __name__
            obj: test_edgehub_module
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __package__
            obj: 
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __spec__
            obj: ModuleSpec(name='test_edgehub_module', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>, origin='/home/bertk/repos/e2e-fx/test-runner/test_edgehub_module.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __file__
            obj: /home/bertk/repos/e2e-fx/test-runner/test_edgehub_module.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __cached__
            obj: /home/bertk/repos/e2e-fx/test-runner/__pycache__/test_edgehub_module.cpython-36-PYTEST.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'BufferError': <class 'BufferError'>, 'MemoryError': <class 'MemoryError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': See https://www.python.org/psf/license/, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: pytest
            obj: <module 'pytest' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: BaseClientTests
            obj: <class 'base_client_tests.BaseClientTests'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: TelemetryTests
            obj: <class 'telemetry_tests.TelemetryTests'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: TwinTests
            obj: <class 'twin_tests.TwinTests'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: InputOutputTests
            obj: <class 'input_output_tests.InputOutputTests'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: ReceiveMethodCallFromServiceTests
            obj: <class 'method_tests.ReceiveMethodCallFromServiceTests'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: ReceiveMethodCallFromModuleTests
            obj: <class 'method_tests.ReceiveMethodCallFromModuleTests'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: InvokeMethodCallOnModuleTests
            obj: <class 'method_tests.InvokeMethodCallOnModuleTests'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: InvokeMethodCallOnLeafDeviceTests
            obj: <class 'method_tests.InvokeMethodCallOnLeafDeviceTests'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: TestIotHubModuleClient
            obj: <class 'test_edgehub_module.TestIotHubModuleClient'>
        finish pytest_pycollect_makeitem --> <Class 'TestIotHubModuleClient'> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __new__
            obj: <built-in method __new__ of type object at 0x55ebbe0e3500>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_edgehub_module.py'>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'test_edgehub_module.py' lenresult=1 outcome='passed'> [hook]
    genitems <Class 'TestIotHubModuleClient'> [collection]
      pytest_collectstart [hook]
          collector: <Class 'TestIotHubModuleClient'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class 'TestIotHubModuleClient'>
      finish pytest_make_collect_report --> <CollectReport 'test_edgehub_module.py::TestIotHubModuleClient' lenresult=1 outcome='passed'> [hook]
    genitems <Instance '()'> [collection]
      pytest_collectstart [hook]
          collector: <Instance '()'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Instance '()'>
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __module__
            obj: test_edgehub_module
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: client
            obj: <function TestIotHubModuleClient.client at 0x7f0a6fa3e9d8>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: pytestmark
            obj: [Mark(name='describe', args=('EdgeHub ModuleClient',), kwargs={}), Mark(name='testgroup_edgehub_module_client', args=(), kwargs={})]
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_client_connect_disconnect
            obj: <function BaseClientTests.test_client_connect_disconnect at 0x7f0a6fa181e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9c80f0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_client_connect_disconnect'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __dict__
            obj: <attribute '__dict__' of 'BaseClientTests' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __weakref__
            obj: <attribute '__weakref__' of 'BaseClientTests' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_send_event_to_iothub
            obj: <function TelemetryTests.test_send_event_to_iothub at 0x7f0a6fa189d8>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9c8588>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_send_event_to_iothub'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_device_send_string_using_new_message_format
            obj: <function TelemetryTests.test_device_send_string_using_new_message_format at 0x7f0a6fa18d08>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9c8b70>
          early skip of rewriting module: py._io.saferepr [assertion]
          early skip of rewriting module: repr [assertion]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_device_send_string_using_new_message_format[64 character string]'>, <Function 'test_device_send_string_using_new_message_format[1K character string]'>, <Function 'test_device_send_string_using_new_message_format[2000 character string]'>, <Function 'test_device_send_string_using_new_message_format[64k character string]'>, <Function 'test_device_send_string_using_new_message_format[simple object]'>, <Function 'test_device_send_string_using_new_message_format[simple object, as string]'>, <Function 'test_device_send_string_using_new_message_format[object with 3 layers]'>, <Function 'test_device_send_string_using_new_message_format[object with 3 layers, as string]'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_client_connect_enable_twin_disconnect
            obj: <function TwinTests.test_client_connect_enable_twin_disconnect at 0x7f0a6fa18e18>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9c8080>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_client_connect_enable_twin_disconnect'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_service_can_set_desired_properties_and_client_can_retrieve_them
            obj: <function TwinTests.test_service_can_set_desired_properties_and_client_can_retrieve_them at 0x7f0a6fa18ea0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9d1eb8>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_service_can_set_desired_properties_and_client_can_retrieve_them'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_service_can_set_multiple_desired_property_patches_and_client_can_retrieve_them_as_events
            obj: <function TwinTests.test_service_can_set_multiple_desired_property_patches_and_client_can_retrieve_them_as_events at 0x7f0a6fa18f28>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9de438>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_service_can_set_multiple_desired_property_patches_and_client_can_retrieve_them_as_events'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_module_can_set_reported_properties_and_service_can_retrieve_them
            obj: <function TwinTests.test_module_can_set_reported_properties_and_service_can_retrieve_them at 0x7f0a6fa3e048>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9de978>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_can_set_reported_properties_and_service_can_retrieve_them'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: output_name_to_test_client
            obj: <function InputOutputTests.output_name_to_test_client at 0x7f0a6fa3e378>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: input_name_from_test_client
            obj: <function InputOutputTests.input_name_from_test_client at 0x7f0a6fa3e488>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_module_client_connect_enable_input_messages_disconnect
            obj: <function InputOutputTests.test_module_client_connect_enable_input_messages_disconnect at 0x7f0a6fa3e510>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9deeb8>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_client_connect_enable_input_messages_disconnect'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_module_to_friend_routing
            obj: <function InputOutputTests.test_module_to_friend_routing at 0x7f0a6fa3e598>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9e1358>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_to_friend_routing'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_module_to_friend_routing_hubevent
            obj: <function InputOutputTests.test_module_to_friend_routing_hubevent at 0x7f0a6fa3e620>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9e1940>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_to_friend_routing_hubevent[64 character string]'>, <Function 'test_module_to_friend_routing_hubevent[1K character string]'>, <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>, <Function 'test_module_to_friend_routing_hubevent[64k character string]'>, <Function 'test_module_to_friend_routing_hubevent[simple object]'>, <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>, <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>, <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_friend_to_module_routing
            obj: <function InputOutputTests.test_friend_to_module_routing at 0x7f0a6fa3e6a8>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9ed780>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_friend_to_module_routing'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_module_test_to_friend_and_back
            obj: <function InputOutputTests.test_module_test_to_friend_and_back at 0x7f0a6fa3e730>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9e12b0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_test_to_friend_and_back'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_module_output_routed_upstream
            obj: <function InputOutputTests.test_module_output_routed_upstream at 0x7f0a6fa3e7b8>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9edf28>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_output_routed_upstream'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_module_output_routed_upstream_hubevent
            obj: <function InputOutputTests.test_module_output_routed_upstream_hubevent at 0x7f0a6fa3e840>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9f6518>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_output_routed_upstream_hubevent[64 character string]'>, <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>, <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>, <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>, <Function 'test_module_output_routed_upstream_hubevent[simple object]'>, <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>, <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>, <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_module_input_output_loopback
            obj: <function InputOutputTests.test_module_input_output_loopback at 0x7f0a6fa3e8c8>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9fd160>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_input_output_loopback'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_module_input_output_loopback_hubevent
            obj: <function InputOutputTests.test_module_input_output_loopback_hubevent at 0x7f0a6fa3e950>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9fd6d8>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_input_output_loopback_hubevent[64 character string]'>, <Function 'test_module_input_output_loopback_hubevent[1K character string]'>, <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>, <Function 'test_module_input_output_loopback_hubevent[64k character string]'>, <Function 'test_module_input_output_loopback_hubevent[simple object]'>, <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>, <Function 'test_module_input_output_loopback_hubevent[object with 3 layers]'>, <Function 'test_module_input_output_loopback_hubevent[object with 3 layers, as string]'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_method_call_invoked_from_service
            obj: <function ReceiveMethodCallFromServiceTests.test_method_call_invoked_from_service at 0x7f0a6fa18510>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9881d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_method_call_invoked_from_service'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_method_call_invoked_from_friend
            obj: <function ReceiveMethodCallFromModuleTests.test_method_call_invoked_from_friend at 0x7f0a6fa18598>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9fd048>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_method_call_invoked_from_friend'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_module_client_connect_enable_methods_disconnect
            obj: <function BaseReceiveMethodCallTests.test_module_client_connect_enable_methods_disconnect at 0x7f0a6fa18488>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f988710>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_client_connect_enable_methods_disconnect'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_method_call_invoked_on_friend
            obj: <function InvokeMethodCallOnModuleTests.test_method_call_invoked_on_friend at 0x7f0a6fa18620>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f988ef0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_method_call_invoked_on_friend'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_method_call_invoked_on_leaf_device
            obj: <function InvokeMethodCallOnLeafDeviceTests.test_method_call_invoked_on_leaf_device at 0x7f0a6fa186a8>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f98e470>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_method_call_invoked_on_leaf_device'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __init__
            obj: <slot wrapper '__init__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __new__
            obj: <built-in method __new__ of type object at 0x55ebbe0ea4c0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __dir__
            obj: <method '__dir__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'test_edgehub_module.py::TestIotHubModuleClient::()' lenresult=49 outcome='passed'> [hook]
    genitems <Function 'test_client_connect_disconnect'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_client_connect_disconnect'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_client_connect_enable_input_messages_disconnect'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_client_connect_enable_input_messages_disconnect'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_to_friend_routing'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_to_friend_routing'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_to_friend_routing_hubevent[64 character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_to_friend_routing_hubevent[64 character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_to_friend_routing_hubevent[1K character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_to_friend_routing_hubevent[1K character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_to_friend_routing_hubevent[2000 character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_to_friend_routing_hubevent[64k character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_to_friend_routing_hubevent[64k character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_to_friend_routing_hubevent[simple object]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_to_friend_routing_hubevent[simple object]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_friend_to_module_routing'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_friend_to_module_routing'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_test_to_friend_and_back'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_test_to_friend_and_back'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_output_routed_upstream'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_output_routed_upstream'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_output_routed_upstream_hubevent[64 character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_output_routed_upstream_hubevent[1K character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_output_routed_upstream_hubevent[64k character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_output_routed_upstream_hubevent[simple object]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_output_routed_upstream_hubevent[simple object]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_input_output_loopback'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_input_output_loopback'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_input_output_loopback_hubevent[64 character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_input_output_loopback_hubevent[64 character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_input_output_loopback_hubevent[1K character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_input_output_loopback_hubevent[1K character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_input_output_loopback_hubevent[2000 character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_input_output_loopback_hubevent[64k character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_input_output_loopback_hubevent[64k character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_input_output_loopback_hubevent[simple object]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_input_output_loopback_hubevent[simple object]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_input_output_loopback_hubevent[object with 3 layers]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_input_output_loopback_hubevent[object with 3 layers]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_input_output_loopback_hubevent[object with 3 layers, as string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_input_output_loopback_hubevent[object with 3 layers, as string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_client_connect_enable_methods_disconnect'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_client_connect_enable_methods_disconnect'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_method_call_invoked_from_service'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_method_call_invoked_from_service'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_method_call_invoked_from_friend'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_method_call_invoked_from_friend'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_method_call_invoked_on_friend'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_method_call_invoked_on_friend'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_method_call_invoked_on_leaf_device'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_method_call_invoked_on_leaf_device'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_send_event_to_iothub'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_send_event_to_iothub'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[64 character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[64 character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[1K character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[1K character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[2000 character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[2000 character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[64k character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[64k character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[simple object]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[simple object]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[simple object, as string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[simple object, as string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[object with 3 layers]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[object with 3 layers]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[object with 3 layers, as string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[object with 3 layers, as string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_client_connect_enable_twin_disconnect'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_client_connect_enable_twin_disconnect'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_service_can_set_desired_properties_and_client_can_retrieve_them'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_service_can_set_desired_properties_and_client_can_retrieve_them'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_service_can_set_multiple_desired_property_patches_and_client_can_retrieve_them_as_events'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_service_can_set_multiple_desired_property_patches_and_client_can_retrieve_them_as_events'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_can_set_reported_properties_and_service_can_retrieve_them'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_can_set_reported_properties_and_service_can_retrieve_them'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test_edgehub_module.py::TestIotHubModuleClient::()' lenresult=49 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test_edgehub_module.py::TestIotHubModuleClient' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test_edgehub_module.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module 'test_iothub_device.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'test_iothub_device.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'test_iothub_device.py'>
      find_module called for: test_iothub_device [assertion]
      matched test file '/home/bertk/repos/e2e-fx/test-runner/test_iothub_device.py' [assertion]
      found cached rewritten pyc for '/home/bertk/repos/e2e-fx/test-runner/test_iothub_device.py' [assertion]
      early skip of rewriting module: c2d_tests [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __name__
            obj: test_iothub_device
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __package__
            obj: 
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __spec__
            obj: ModuleSpec(name='test_iothub_device', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>, origin='/home/bertk/repos/e2e-fx/test-runner/test_iothub_device.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __file__
            obj: /home/bertk/repos/e2e-fx/test-runner/test_iothub_device.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __cached__
            obj: /home/bertk/repos/e2e-fx/test-runner/__pycache__/test_iothub_device.cpython-36-PYTEST.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'BufferError': <class 'BufferError'>, 'MemoryError': <class 'MemoryError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': See https://www.python.org/psf/license/, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: pytest
            obj: <module 'pytest' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: BaseClientTests
            obj: <class 'base_client_tests.BaseClientTests'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: TelemetryTests
            obj: <class 'telemetry_tests.TelemetryTests'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: TwinTests
            obj: <class 'twin_tests.TwinTests'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: ReceiveMethodCallFromServiceTests
            obj: <class 'method_tests.ReceiveMethodCallFromServiceTests'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: ReceiveMethodCallFromModuleTests
            obj: <class 'method_tests.ReceiveMethodCallFromModuleTests'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: C2dTests
            obj: <class 'c2d_tests.C2dTests'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: TestIotHubModuleClient
            obj: <class 'test_iothub_device.TestIotHubModuleClient'>
        finish pytest_pycollect_makeitem --> <Class 'TestIotHubModuleClient'> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __new__
            obj: <built-in method __new__ of type object at 0x55ebbe0e3500>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_device.py'>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'test_iothub_device.py' lenresult=1 outcome='passed'> [hook]
    genitems <Class 'TestIotHubModuleClient'> [collection]
      pytest_collectstart [hook]
          collector: <Class 'TestIotHubModuleClient'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class 'TestIotHubModuleClient'>
      finish pytest_make_collect_report --> <CollectReport 'test_iothub_device.py::TestIotHubModuleClient' lenresult=1 outcome='passed'> [hook]
    genitems <Instance '()'> [collection]
      pytest_collectstart [hook]
          collector: <Instance '()'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Instance '()'>
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __module__
            obj: test_iothub_device
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: client
            obj: <function TestIotHubModuleClient.client at 0x7f0a6f9f52f0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: pytestmark
            obj: [Mark(name='testgroup_iothub_device_client', args=(), kwargs={}), Mark(name='describe', args=('IoTHub Device',), kwargs={})]
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_client_connect_disconnect
            obj: <function BaseClientTests.test_client_connect_disconnect at 0x7f0a6fa181e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f98ec18>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_client_connect_disconnect'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __dict__
            obj: <attribute '__dict__' of 'BaseClientTests' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __weakref__
            obj: <attribute '__weakref__' of 'BaseClientTests' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_send_event_to_iothub
            obj: <function TelemetryTests.test_send_event_to_iothub at 0x7f0a6fa189d8>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f995208>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_send_event_to_iothub'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_device_send_string_using_new_message_format
            obj: <function TelemetryTests.test_device_send_string_using_new_message_format at 0x7f0a6fa18d08>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f995860>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_device_send_string_using_new_message_format[64 character string]'>, <Function 'test_device_send_string_using_new_message_format[1K character string]'>, <Function 'test_device_send_string_using_new_message_format[2000 character string]'>, <Function 'test_device_send_string_using_new_message_format[64k character string]'>, <Function 'test_device_send_string_using_new_message_format[simple object]'>, <Function 'test_device_send_string_using_new_message_format[simple object, as string]'>, <Function 'test_device_send_string_using_new_message_format[object with 3 layers]'>, <Function 'test_device_send_string_using_new_message_format[object with 3 layers, as string]'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_client_connect_enable_twin_disconnect
            obj: <function TwinTests.test_client_connect_enable_twin_disconnect at 0x7f0a6fa18e18>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f99f5c0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_client_connect_enable_twin_disconnect'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_service_can_set_desired_properties_and_client_can_retrieve_them
            obj: <function TwinTests.test_service_can_set_desired_properties_and_client_can_retrieve_them at 0x7f0a6fa18ea0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9951d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_service_can_set_desired_properties_and_client_can_retrieve_them'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_service_can_set_multiple_desired_property_patches_and_client_can_retrieve_them_as_events
            obj: <function TwinTests.test_service_can_set_multiple_desired_property_patches_and_client_can_retrieve_them_as_events at 0x7f0a6fa18f28>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f99f550>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_service_can_set_multiple_desired_property_patches_and_client_can_retrieve_them_as_events'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_module_can_set_reported_properties_and_service_can_retrieve_them
            obj: <function TwinTests.test_module_can_set_reported_properties_and_service_can_retrieve_them at 0x7f0a6fa3e048>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f99ff60>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_can_set_reported_properties_and_service_can_retrieve_them'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_method_call_invoked_from_service
            obj: <function ReceiveMethodCallFromServiceTests.test_method_call_invoked_from_service at 0x7f0a6fa18510>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9a8518>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_method_call_invoked_from_service'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_module_client_connect_enable_methods_disconnect
            obj: <function BaseReceiveMethodCallTests.test_module_client_connect_enable_methods_disconnect at 0x7f0a6fa18488>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9a8a20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_client_connect_enable_methods_disconnect'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_client_connect_enable_c2d_disconnect
            obj: <function C2dTests.test_client_connect_enable_c2d_disconnect at 0x7f0a6fa3eea0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9a8e80>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_client_connect_enable_c2d_disconnect'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_device_receive_c2d
            obj: <function C2dTests.test_device_receive_c2d at 0x7f0a6f9f51e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9ae320>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_device_receive_c2d'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __init__
            obj: <slot wrapper '__init__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __new__
            obj: <built-in method __new__ of type object at 0x55ebbe0ea4c0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __dir__
            obj: <method '__dir__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'test_iothub_device.py::TestIotHubModuleClient::()' lenresult=18 outcome='passed'> [hook]
    genitems <Function 'test_client_connect_disconnect'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_client_connect_disconnect'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_client_connect_enable_c2d_disconnect'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_client_connect_enable_c2d_disconnect'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_receive_c2d'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_receive_c2d'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_client_connect_enable_methods_disconnect'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_client_connect_enable_methods_disconnect'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_method_call_invoked_from_service'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_method_call_invoked_from_service'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_send_event_to_iothub'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_send_event_to_iothub'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[64 character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[64 character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[1K character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[1K character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[2000 character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[2000 character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[64k character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[64k character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[simple object]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[simple object]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[simple object, as string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[simple object, as string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[object with 3 layers]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[object with 3 layers]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[object with 3 layers, as string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[object with 3 layers, as string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_client_connect_enable_twin_disconnect'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_client_connect_enable_twin_disconnect'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_service_can_set_desired_properties_and_client_can_retrieve_them'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_service_can_set_desired_properties_and_client_can_retrieve_them'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_service_can_set_multiple_desired_property_patches_and_client_can_retrieve_them_as_events'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_service_can_set_multiple_desired_property_patches_and_client_can_retrieve_them_as_events'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_can_set_reported_properties_and_service_can_retrieve_them'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_can_set_reported_properties_and_service_can_retrieve_them'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test_iothub_device.py::TestIotHubModuleClient::()' lenresult=18 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test_iothub_device.py::TestIotHubModuleClient' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test_iothub_device.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module 'test_iothub_module.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'test_iothub_module.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'test_iothub_module.py'>
      find_module called for: test_iothub_module [assertion]
      matched test file '/home/bertk/repos/e2e-fx/test-runner/test_iothub_module.py' [assertion]
      found cached rewritten pyc for '/home/bertk/repos/e2e-fx/test-runner/test_iothub_module.py' [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __name__
            obj: test_iothub_module
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __package__
            obj: 
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __spec__
            obj: ModuleSpec(name='test_iothub_module', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>, origin='/home/bertk/repos/e2e-fx/test-runner/test_iothub_module.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __file__
            obj: /home/bertk/repos/e2e-fx/test-runner/test_iothub_module.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __cached__
            obj: /home/bertk/repos/e2e-fx/test-runner/__pycache__/test_iothub_module.cpython-36-PYTEST.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'BufferError': <class 'BufferError'>, 'MemoryError': <class 'MemoryError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': See https://www.python.org/psf/license/, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: pytest
            obj: <module 'pytest' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: BaseClientTests
            obj: <class 'base_client_tests.BaseClientTests'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: TelemetryTests
            obj: <class 'telemetry_tests.TelemetryTests'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: TwinTests
            obj: <class 'twin_tests.TwinTests'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: TestIotHubModuleClient
            obj: <class 'test_iothub_module.TestIotHubModuleClient'>
        finish pytest_pycollect_makeitem --> <Class 'TestIotHubModuleClient'> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __new__
            obj: <built-in method __new__ of type object at 0x55ebbe0e3500>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_iothub_module.py'>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'test_iothub_module.py' lenresult=1 outcome='passed'> [hook]
    genitems <Class 'TestIotHubModuleClient'> [collection]
      pytest_collectstart [hook]
          collector: <Class 'TestIotHubModuleClient'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class 'TestIotHubModuleClient'>
      finish pytest_make_collect_report --> <CollectReport 'test_iothub_module.py::TestIotHubModuleClient' lenresult=1 outcome='passed'> [hook]
    genitems <Instance '()'> [collection]
      pytest_collectstart [hook]
          collector: <Instance '()'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Instance '()'>
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __module__
            obj: test_iothub_module
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: client
            obj: <function TestIotHubModuleClient.client at 0x7f0a6f9f5048>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: pytestmark
            obj: [Mark(name='testgroup_iothub_module_client', args=(), kwargs={}), Mark(name='describe', args=('IoTHubModuleClient',), kwargs={})]
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_client_connect_disconnect
            obj: <function BaseClientTests.test_client_connect_disconnect at 0x7f0a6fa181e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9aeac8>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_client_connect_disconnect'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __dict__
            obj: <attribute '__dict__' of 'BaseClientTests' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __weakref__
            obj: <attribute '__weakref__' of 'BaseClientTests' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_send_event_to_iothub
            obj: <function TelemetryTests.test_send_event_to_iothub at 0x7f0a6fa189d8>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9aeef0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_send_event_to_iothub'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_device_send_string_using_new_message_format
            obj: <function TelemetryTests.test_device_send_string_using_new_message_format at 0x7f0a6fa18d08>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9b4470>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_device_send_string_using_new_message_format[64 character string]'>, <Function 'test_device_send_string_using_new_message_format[1K character string]'>, <Function 'test_device_send_string_using_new_message_format[2000 character string]'>, <Function 'test_device_send_string_using_new_message_format[64k character string]'>, <Function 'test_device_send_string_using_new_message_format[simple object]'>, <Function 'test_device_send_string_using_new_message_format[simple object, as string]'>, <Function 'test_device_send_string_using_new_message_format[object with 3 layers]'>, <Function 'test_device_send_string_using_new_message_format[object with 3 layers, as string]'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_client_connect_enable_twin_disconnect
            obj: <function TwinTests.test_client_connect_enable_twin_disconnect at 0x7f0a6fa18e18>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9882b0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_client_connect_enable_twin_disconnect'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_service_can_set_desired_properties_and_client_can_retrieve_them
            obj: <function TwinTests.test_service_can_set_desired_properties_and_client_can_retrieve_them at 0x7f0a6fa18ea0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9bd160>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_service_can_set_desired_properties_and_client_can_retrieve_them'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_service_can_set_multiple_desired_property_patches_and_client_can_retrieve_them_as_events
            obj: <function TwinTests.test_service_can_set_multiple_desired_property_patches_and_client_can_retrieve_them_as_events at 0x7f0a6fa18f28>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9bd668>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_service_can_set_multiple_desired_property_patches_and_client_can_retrieve_them_as_events'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: test_module_can_set_reported_properties_and_service_can_retrieve_them
            obj: <function TwinTests.test_module_can_set_reported_properties_and_service_can_retrieve_them at 0x7f0a6fa3e048>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f9bdb70>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_can_set_reported_properties_and_service_can_retrieve_them'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __init__
            obj: <slot wrapper '__init__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __new__
            obj: <built-in method __new__ of type object at 0x55ebbe0ea4c0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __dir__
            obj: <method '__dir__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance '()'>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'test_iothub_module.py::TestIotHubModuleClient::()' lenresult=14 outcome='passed'> [hook]
    genitems <Function 'test_client_connect_disconnect'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_client_connect_disconnect'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_send_event_to_iothub'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_send_event_to_iothub'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[64 character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[64 character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[1K character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[1K character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[2000 character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[2000 character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[64k character string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[64k character string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[simple object]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[simple object]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[simple object, as string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[simple object, as string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[object with 3 layers]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[object with 3 layers]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_send_string_using_new_message_format[object with 3 layers, as string]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_send_string_using_new_message_format[object with 3 layers, as string]'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_client_connect_enable_twin_disconnect'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_client_connect_enable_twin_disconnect'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_service_can_set_desired_properties_and_client_can_retrieve_them'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_service_can_set_desired_properties_and_client_can_retrieve_them'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_service_can_set_multiple_desired_property_patches_and_client_can_retrieve_them_as_events'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_service_can_set_multiple_desired_property_patches_and_client_can_retrieve_them_as_events'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_can_set_reported_properties_and_service_can_retrieve_them'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_can_set_reported_properties_and_service_can_retrieve_them'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test_iothub_module.py::TestIotHubModuleClient::()' lenresult=14 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test_iothub_module.py::TestIotHubModuleClient' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test_iothub_module.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'> [collection]
      pytest_collectstart [hook]
          collector: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/abstract_device_api.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/abstract_device_api.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/abstract_module_api.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/abstract_module_api.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/abstract_registry_api.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/abstract_registry_api.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/abstract_service_api.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/abstract_service_api.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/abstract_wrapper_api.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/abstract_wrapper_api.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/adapter_config.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/adapter_config.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/decorators.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/decorators.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/print_message.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/print_message.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__/__init__.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__/__init__.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__/abstract_device_api.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__/abstract_device_api.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__/abstract_module_api.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__/abstract_module_api.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__/abstract_registry_api.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__/abstract_registry_api.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__/abstract_service_api.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__/abstract_service_api.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__/abstract_wrapper_api.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__/abstract_wrapper_api.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__/adapter_config.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__/adapter_config.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__/decorators.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__/decorators.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__/print_message.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/__pycache__/print_message.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/__pycache__
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/__init__.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/__init__.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
          pytest_pycollect_makemodule [hook]
              path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/__init__.py
              parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
          finish pytest_pycollect_makemodule --> <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest'> [hook]
        finish pytest_collect_file --> [<Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest'>] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/__pycache__
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/__init__.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/__init__.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
          pytest_pycollect_makemodule [hook]
              path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/__init__.py
              parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
          finish pytest_pycollect_makemodule --> <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk'> [hook]
        finish pytest_collect_file --> [<Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk'>] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__init__.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__init__.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
          pytest_pycollect_makemodule [hook]
              path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__init__.py
              parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters'>
          finish pytest_pycollect_makemodule --> <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/rest'> [hook]
        finish pytest_collect_file --> [<Package '/home/bertk/repos/e2e-fx/test-runner/adapters/rest'>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'adapters/__init__.py' lenresult=3 outcome='passed'> [hook]
    genitems <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest'> [collection]
      pytest_collectstart [hook]
          collector: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest'>
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/__pycache__
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest'>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/amqp_service_client.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/amqp_service_client.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/direct_eventhub_api.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/direct_eventhub_api.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/direct_registry_api.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/direct_registry_api.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/direct_service_api.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/direct_service_api.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/__pycache__/__init__.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/__pycache__/__init__.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/__pycache__/amqp_service_client.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/__pycache__/amqp_service_client.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/__pycache__/direct_eventhub_api.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/__pycache__/direct_eventhub_api.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/__pycache__/direct_registry_api.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/__pycache__/direct_registry_api.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/__pycache__/direct_service_api.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest/__pycache__/direct_service_api.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_azure_rest'>
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'adapters/direct_azure_rest/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'adapters/direct_azure_rest/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk'> [collection]
      pytest_collectstart [hook]
          collector: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk'>
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/__pycache__
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk'>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/base_module_or_device_api.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/base_module_or_device_api.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/direct_device_api.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/direct_device_api.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/direct_module_api.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/direct_module_api.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/direct_wrapper_api.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/direct_wrapper_api.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/__pycache__/__init__.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/__pycache__/__init__.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/__pycache__/base_module_or_device_api.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/__pycache__/base_module_or_device_api.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/__pycache__/direct_device_api.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/__pycache__/direct_device_api.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/__pycache__/direct_module_api.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/__pycache__/direct_module_api.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/__pycache__/direct_wrapper_api.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk/__pycache__/direct_wrapper_api.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/direct_python_sdk'>
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'adapters/direct_python_sdk/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'adapters/direct_python_sdk/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/rest'> [collection]
      pytest_collectstart [hook]
          collector: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/rest'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/rest'>
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/rest'>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/base_module_or_device_api.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/base_module_or_device_api.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/rest'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/rest_device_api.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/rest_device_api.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/rest'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/rest_module_api.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/rest_module_api.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/rest'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/rest_registry_api.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/rest_registry_api.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/rest'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/rest_service_api.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/rest_service_api.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/rest'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/rest_wrapper_api.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/rest_wrapper_api.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/rest'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__/__init__.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__/__init__.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/rest'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__/base_module_or_device_api.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__/base_module_or_device_api.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/rest'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__/rest_device_api.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__/rest_device_api.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/rest'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__/rest_module_api.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__/rest_module_api.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/rest'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__/rest_registry_api.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__/rest_registry_api.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/rest'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__/rest_service_api.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__/rest_service_api.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/rest'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__/rest_wrapper_api.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/adapters/rest/__pycache__/rest_wrapper_api.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/adapters/rest'>
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'adapters/rest/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'adapters/rest/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'adapters/__init__.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module 'test_connect_disconnect_fi.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'test_connect_disconnect_fi.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'test_connect_disconnect_fi.py'>
      find_module called for: test_connect_disconnect_fi [assertion]
      matched test file '/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_connect_disconnect_fi.py' [assertion]
      found cached rewritten pyc for '/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_connect_disconnect_fi.py' [assertion]
      early skip of rewriting module: edgehub_control [assertion]
      early skip of rewriting module: docker [assertion]
      early skip of rewriting module: docker.api [assertion]
      early skip of rewriting module: docker.api.client [assertion]
      early skip of rewriting module: websocket [assertion]
      early skip of rewriting module: websocket._abnf [assertion]
      early skip of rewriting module: websocket._exceptions [assertion]
      early skip of rewriting module: websocket._utils [assertion]
      early skip of rewriting module: wsaccel [assertion]
      early skip of rewriting module: numpy [assertion]
      early skip of rewriting module: wsaccel [assertion]
      early skip of rewriting module: websocket._app [assertion]
      early skip of rewriting module: websocket._core [assertion]
      early skip of rewriting module: websocket._handshake [assertion]
      early skip of rewriting module: websocket._cookiejar [assertion]
      early skip of rewriting module: Cookie [assertion]
      early skip of rewriting module: websocket._http [assertion]
      early skip of rewriting module: websocket._logging [assertion]
      early skip of rewriting module: websocket._socket [assertion]
      early skip of rewriting module: websocket._ssl_compat [assertion]
      early skip of rewriting module: websocket._url [assertion]
      early skip of rewriting module: six.moves.urllib.parse [assertion]
      early skip of rewriting module: socks [assertion]
      early skip of rewriting module: docker.api.build [assertion]
      early skip of rewriting module: docker.auth [assertion]
      early skip of rewriting module: dockerpycreds [assertion]
      early skip of rewriting module: dockerpycreds.store [assertion]
      early skip of rewriting module: dockerpycreds.constants [assertion]
      early skip of rewriting module: dockerpycreds.errors [assertion]
      early skip of rewriting module: dockerpycreds.utils [assertion]
      early skip of rewriting module: distutils [assertion]
      early skip of rewriting module: distutils.dist [assertion]
      early skip of rewriting module: distutils.errors [assertion]
      early skip of rewriting module: distutils.fancy_getopt [assertion]
      early skip of rewriting module: getopt [assertion]
      early skip of rewriting module: distutils.util [assertion]
      early skip of rewriting module: distutils.dep_util [assertion]
      early skip of rewriting module: distutils.spawn [assertion]
      early skip of rewriting module: distutils.debug [assertion]
      early skip of rewriting module: distutils.log [assertion]
      early skip of rewriting module: distutils.sysconfig [assertion]
      early skip of rewriting module: docker.errors [assertion]
      early skip of rewriting module: docker.utils [assertion]
      early skip of rewriting module: docker.utils.build [assertion]
      early skip of rewriting module: tarfile [assertion]
      early skip of rewriting module: docker.utils.fnmatch [assertion]
      early skip of rewriting module: docker.constants [assertion]
      early skip of rewriting module: docker.version [assertion]
      early skip of rewriting module: docker.utils.decorators [assertion]
      early skip of rewriting module: docker.utils.utils [assertion]
      early skip of rewriting module: distutils.version [assertion]
      early skip of rewriting module: docker.tls [assertion]
      early skip of rewriting module: docker.transport [assertion]
      early skip of rewriting module: docker.transport.unixconn [assertion]
      early skip of rewriting module: docker.transport.ssladapter [assertion]
      early skip of rewriting module: docker.transport.npipeconn [assertion]
      early skip of rewriting module: docker.transport.npipesocket [assertion]
      early skip of rewriting module: win32file [assertion]
      early skip of rewriting module: docker.utils.config [assertion]
      early skip of rewriting module: docker.api.config [assertion]
      early skip of rewriting module: docker.api.container [assertion]
      early skip of rewriting module: docker.types [assertion]
      early skip of rewriting module: docker.types.containers [assertion]
      early skip of rewriting module: docker.types.base [assertion]
      early skip of rewriting module: docker.types.healthcheck [assertion]
      early skip of rewriting module: docker.types.daemon [assertion]
      early skip of rewriting module: docker.types.networks [assertion]
      early skip of rewriting module: docker.types.services [assertion]
      early skip of rewriting module: docker.types.swarm [assertion]
      early skip of rewriting module: docker.api.daemon [assertion]
      early skip of rewriting module: docker.api.exec_api [assertion]
      early skip of rewriting module: docker.api.image [assertion]
      early skip of rewriting module: docker.api.network [assertion]
      early skip of rewriting module: docker.api.plugin [assertion]
      early skip of rewriting module: docker.api.secret [assertion]
      early skip of rewriting module: docker.api.service [assertion]
      early skip of rewriting module: docker.api.swarm [assertion]
      early skip of rewriting module: docker.api.volume [assertion]
      early skip of rewriting module: docker.utils.socket [assertion]
      early skip of rewriting module: docker.transport.NpipeSocket [assertion]
      early skip of rewriting module: docker.utils.json_stream [assertion]
      early skip of rewriting module: docker.transport.NpipeAdapter [assertion]
      early skip of rewriting module: docker.client [assertion]
      early skip of rewriting module: docker.models [assertion]
      early skip of rewriting module: docker.models.configs [assertion]
      early skip of rewriting module: docker.models.resource [assertion]
      early skip of rewriting module: docker.models.containers [assertion]
      early skip of rewriting module: docker.models.images [assertion]
      early skip of rewriting module: docker.models.networks [assertion]
      early skip of rewriting module: docker.models.nodes [assertion]
      early skip of rewriting module: docker.models.plugins [assertion]
      early skip of rewriting module: docker.models.secrets [assertion]
      early skip of rewriting module: docker.models.services [assertion]
      early skip of rewriting module: docker.models.swarm [assertion]
      early skip of rewriting module: docker.models.volumes [assertion]
      early skip of rewriting module: netrc [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __name__
            obj: test_connect_disconnect_fi
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __package__
            obj: 
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __spec__
            obj: ModuleSpec(name='test_connect_disconnect_fi', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>, origin='/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_connect_disconnect_fi.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __file__
            obj: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_connect_disconnect_fi.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __cached__
            obj: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_connect_disconnect_fi.cpython-36-PYTEST.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'BufferError': <class 'BufferError'>, 'MemoryError': <class 'MemoryError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': See https://www.python.org/psf/license/, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: sys
            obj: <module 'sys' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: pytest
            obj: <module 'pytest' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: connections
            obj: <module 'connections' from '/home/bertk/repos/e2e-fx/test-runner/connections.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: log_message
            obj: <function print_message at 0x7f0a711cd400>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: urllib
            obj: <module 'urllib' from '/home/bertk/.pyenv/versions/3.6.6/lib/python3.6/urllib/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: disconnect_edgehub
            obj: <function disconnect_edgehub at 0x7f0a75b71f28>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: connect_edgehub
            obj: <function connect_edgehub at 0x7f0a6f82a048>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: edgeHub
            obj: <Container: 9396e9d0a2>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: restart_edgehub
            obj: <function restart_edgehub at 0x7f0a6f82a0d0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: test_module_client_connect_enable_twin_disconnect_fi
            obj: <function test_module_client_connect_enable_twin_disconnect_fi at 0x7f0a6f9f5d08>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f83e9b0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_client_connect_enable_twin_disconnect_fi'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: test_module_client_connect_enable_methods_disconnect_fi
            obj: <function test_module_client_connect_enable_methods_disconnect_fi at 0x7f0a6f82a158>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f83ecc0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_client_connect_enable_methods_disconnect_fi'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: test_module_client_connect_enable_input_messages_disconnect_fi
            obj: <function test_module_client_connect_enable_input_messages_disconnect_fi at 0x7f0a6f82a1e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f83efd0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_client_connect_enable_input_messages_disconnect_fi'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: test_device_client_connect_disconnect_fi
            obj: <function test_device_client_connect_disconnect_fi at 0x7f0a6f82a268>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f847320>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_device_client_connect_disconnect_fi'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: test_device_client_connect_enable_methods_disconnect_fi
            obj: <function test_device_client_connect_enable_methods_disconnect_fi at 0x7f0a6f82a2f0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f83ec88>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_device_client_connect_enable_methods_disconnect_fi'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __new__
            obj: <built-in method __new__ of type object at 0x55ebbe0e3500>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_connect_disconnect_fi.py'>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'edge_module_fi_tests/test_connect_disconnect_fi.py' lenresult=5 outcome='passed'> [hook]
    genitems <Function 'test_module_client_connect_enable_twin_disconnect_fi'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_client_connect_enable_twin_disconnect_fi'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_client_connect_enable_methods_disconnect_fi'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_client_connect_enable_methods_disconnect_fi'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_client_connect_enable_input_messages_disconnect_fi'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_client_connect_enable_input_messages_disconnect_fi'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_client_connect_disconnect_fi'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_client_connect_disconnect_fi'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_client_connect_enable_methods_disconnect_fi'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_client_connect_enable_methods_disconnect_fi'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'edge_module_fi_tests/test_connect_disconnect_fi.py' lenresult=5 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module 'test_device_methods_fi.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'test_device_methods_fi.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'test_device_methods_fi.py'>
      find_module called for: test_device_methods_fi [assertion]
      matched test file '/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_device_methods_fi.py' [assertion]
      found cached rewritten pyc for '/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_device_methods_fi.py' [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __name__
            obj: test_device_methods_fi
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __package__
            obj: 
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __spec__
            obj: ModuleSpec(name='test_device_methods_fi', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>, origin='/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_device_methods_fi.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __file__
            obj: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_device_methods_fi.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __cached__
            obj: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_device_methods_fi.cpython-36-PYTEST.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'BufferError': <class 'BufferError'>, 'MemoryError': <class 'MemoryError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': See https://www.python.org/psf/license/, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: json
            obj: <module 'json' from '/home/bertk/.pyenv/versions/3.6.6/lib/python3.6/json/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: time
            obj: <module 'time' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: docker
            obj: <module 'docker' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/docker/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: pytest
            obj: <module 'pytest' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: connections
            obj: <module 'connections' from '/home/bertk/repos/e2e-fx/test-runner/connections.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: connect_edgehub
            obj: <function connect_edgehub at 0x7f0a6f82a048>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: disconnect_edgehub
            obj: <function disconnect_edgehub at 0x7f0a75b71f28>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: edgeHub
            obj: <Container: 9396e9d0a2>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: restart_edgehub
            obj: <function restart_edgehub at 0x7f0a6f82a0d0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: log_message
            obj: <function print_message at 0x7f0a711cd400>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: get_current_config
            obj: <function get_current_config at 0x7f0a6fb420d0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: client
            obj: <docker.client.DockerClient object at 0x7f0a6f99ff60>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: time_for_method_to_fully_register
            obj: 5
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: method_name
            obj: test_method
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: method_payload
            obj: "Look at me, I've got payload!"
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: status_code
            obj: 221
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: method_invoke_parameters
            obj: {'methodName': 'test_method', 'payload': '"Look at me, I\'ve got payload!"', 'responseTimeoutInSeconds': 15, 'connectTimeoutInSeconds': 15}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: method_response_body
            obj: {'response': "Look at me.  I'm a response!"}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: do_device_method_call
            obj: <function do_device_method_call at 0x7f0a6f82a378>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: test_device_method_from_service_to_leaf_device_fi
            obj: <function test_device_method_from_service_to_leaf_device_fi at 0x7f0a6f82a400>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f847cc0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_device_method_from_service_to_leaf_device_fi'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: test_device_method_from_module_to_leaf_device_fi
            obj: <function test_device_method_from_module_to_leaf_device_fi at 0x7f0a6f82a7b8>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f847fd0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_device_method_from_module_to_leaf_device_fi'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __new__
            obj: <built-in method __new__ of type object at 0x55ebbe0e3500>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_device_methods_fi.py'>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'edge_module_fi_tests/test_device_methods_fi.py' lenresult=2 outcome='passed'> [hook]
    genitems <Function 'test_device_method_from_service_to_leaf_device_fi'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_method_from_service_to_leaf_device_fi'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_device_method_from_module_to_leaf_device_fi'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_device_method_from_module_to_leaf_device_fi'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'edge_module_fi_tests/test_device_methods_fi.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module 'test_module_methods_fi.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'test_module_methods_fi.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'test_module_methods_fi.py'>
      find_module called for: test_module_methods_fi [assertion]
      matched test file '/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_methods_fi.py' [assertion]
      found cached rewritten pyc for '/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_methods_fi.py' [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __name__
            obj: test_module_methods_fi
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __package__
            obj: 
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __spec__
            obj: ModuleSpec(name='test_module_methods_fi', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>, origin='/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_methods_fi.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __file__
            obj: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_methods_fi.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __cached__
            obj: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_module_methods_fi.cpython-36-PYTEST.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'BufferError': <class 'BufferError'>, 'MemoryError': <class 'MemoryError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': See https://www.python.org/psf/license/, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: pytest
            obj: <module 'pytest' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: connections
            obj: <module 'connections' from '/home/bertk/repos/e2e-fx/test-runner/connections.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: json
            obj: <module 'json' from '/home/bertk/.pyenv/versions/3.6.6/lib/python3.6/json/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: multiprocessing
            obj: <module 'multiprocessing' from '/home/bertk/.pyenv/versions/3.6.6/lib/python3.6/multiprocessing/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: time
            obj: <module 'time' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: log_message
            obj: <function print_message at 0x7f0a711cd400>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: disconnect_edgehub
            obj: <function disconnect_edgehub at 0x7f0a75b71f28>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: connect_edgehub
            obj: <function connect_edgehub at 0x7f0a6f82a048>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: restart_edgehub
            obj: <function restart_edgehub at 0x7f0a6f82a0d0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: get_current_config
            obj: <function get_current_config at 0x7f0a6fb420d0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: docker
            obj: <module 'docker' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/docker/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: client
            obj: <docker.client.DockerClient object at 0x7f0a6f847fd0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: time_for_method_to_fully_register
            obj: 5
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: time_for_method_to_fully_register_service_call
            obj: 15
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: method_name
            obj: test_method
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: method_payload
            obj: "Look at me, I've got payload!"
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: status_code
            obj: 221
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: method_invoke_parameters
            obj: {'methodName': 'test_method', 'payload': '"Look at me, I\'ve got payload!"', 'responseTimeoutInSeconds': 75, 'connectTimeoutInSeconds': 60}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: method_response_body
            obj: {'response': "Look at me.  I'm a response!"}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: do_module_method_call
            obj: <function do_module_method_call at 0x7f0a6f82aae8>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: test_module_method_call_invoked_from_service
            obj: <function test_module_method_call_invoked_from_service at 0x7f0a6f82aa60>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f7d1ac8>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_method_call_invoked_from_service'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: test_module_method_from_test_to_friend_fi
            obj: <function test_module_method_from_test_to_friend_fi at 0x7f0a6f82ad90>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f7d1dd8>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_method_from_test_to_friend_fi'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: test_module_method_from_friend_to_test_fi
            obj: <function test_module_method_from_friend_to_test_fi at 0x7f0a6f82ad08>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f7db160>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_method_from_friend_to_test_fi'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __new__
            obj: <built-in method __new__ of type object at 0x55ebbe0e3500>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_methods_fi.py'>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'edge_module_fi_tests/test_module_methods_fi.py' lenresult=3 outcome='passed'> [hook]
    genitems <Function 'test_module_method_call_invoked_from_service'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_method_call_invoked_from_service'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_method_from_test_to_friend_fi'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_method_from_test_to_friend_fi'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_module_method_from_friend_to_test_fi'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_method_from_friend_to_test_fi'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'edge_module_fi_tests/test_module_methods_fi.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module 'test_module_output_routed_upstream_fi.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'test_module_output_routed_upstream_fi.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'test_module_output_routed_upstream_fi.py'>
      find_module called for: test_module_output_routed_upstream_fi [assertion]
      matched test file '/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_output_routed_upstream_fi.py' [assertion]
      found cached rewritten pyc for '/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_output_routed_upstream_fi.py' [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __name__
            obj: test_module_output_routed_upstream_fi
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __package__
            obj: 
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __spec__
            obj: ModuleSpec(name='test_module_output_routed_upstream_fi', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>, origin='/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_output_routed_upstream_fi.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __file__
            obj: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_output_routed_upstream_fi.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __cached__
            obj: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_module_output_routed_upstream_fi.cpython-36-PYTEST.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'BufferError': <class 'BufferError'>, 'MemoryError': <class 'MemoryError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': See https://www.python.org/psf/license/, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: pytest
            obj: <module 'pytest' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: connections
            obj: <module 'connections' from '/home/bertk/repos/e2e-fx/test-runner/connections.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: get_current_config
            obj: <function get_current_config at 0x7f0a6fb420d0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: disconnect_edgehub
            obj: <function disconnect_edgehub at 0x7f0a75b71f28>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: connect_edgehub
            obj: <function connect_edgehub at 0x7f0a6f82a048>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: edgeHub
            obj: <Container: 9396e9d0a2>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: restart_edgehub
            obj: <function restart_edgehub at 0x7f0a6f82a0d0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: log_message
            obj: <function print_message at 0x7f0a711cd400>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: output_name
            obj: telemetry
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: test_module_output_routed_upstream_fi
            obj: <function test_module_output_routed_upstream_fi at 0x7f0a6f82a620>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f7db7f0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_output_routed_upstream_fi'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __new__
            obj: <built-in method __new__ of type object at 0x55ebbe0e3500>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_output_routed_upstream_fi.py'>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'edge_module_fi_tests/test_module_output_routed_upstream_fi.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function 'test_module_output_routed_upstream_fi'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_output_routed_upstream_fi'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'edge_module_fi_tests/test_module_output_routed_upstream_fi.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module 'test_module_send_telemetry_fi.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'test_module_send_telemetry_fi.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'test_module_send_telemetry_fi.py'>
      find_module called for: test_module_send_telemetry_fi [assertion]
      matched test file '/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_send_telemetry_fi.py' [assertion]
      found cached rewritten pyc for '/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_send_telemetry_fi.py' [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __name__
            obj: test_module_send_telemetry_fi
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __package__
            obj: 
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __spec__
            obj: ModuleSpec(name='test_module_send_telemetry_fi', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>, origin='/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_send_telemetry_fi.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __file__
            obj: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_send_telemetry_fi.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __cached__
            obj: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_module_send_telemetry_fi.cpython-36-PYTEST.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'BufferError': <class 'BufferError'>, 'MemoryError': <class 'MemoryError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': See https://www.python.org/psf/license/, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: pytest
            obj: <module 'pytest' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: connections
            obj: <module 'connections' from '/home/bertk/repos/e2e-fx/test-runner/connections.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: get_current_config
            obj: <function get_current_config at 0x7f0a6fb420d0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: log_message
            obj: <function print_message at 0x7f0a711cd400>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: edgeHub
            obj: <Container: 9396e9d0a2>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: disconnect_edgehub
            obj: <function disconnect_edgehub at 0x7f0a75b71f28>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: connect_edgehub
            obj: <function connect_edgehub at 0x7f0a6f82a048>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: restart_edgehub
            obj: <function restart_edgehub at 0x7f0a6f82a0d0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: local_timeout
            obj: 60
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: test_module_send_event_iothub_fi
            obj: <function test_module_send_event_iothub_fi at 0x7f0a6f7d72f0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f7db6a0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_send_event_iothub_fi'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __new__
            obj: <built-in method __new__ of type object at 0x55ebbe0e3500>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_send_telemetry_fi.py'>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'edge_module_fi_tests/test_module_send_telemetry_fi.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function 'test_module_send_event_iothub_fi'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_send_event_iothub_fi'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'edge_module_fi_tests/test_module_send_telemetry_fi.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module 'test_module_to_module_routing_fi.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'test_module_to_module_routing_fi.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'test_module_to_module_routing_fi.py'>
      find_module called for: test_module_to_module_routing_fi [assertion]
      matched test file '/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_to_module_routing_fi.py' [assertion]
      found cached rewritten pyc for '/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_to_module_routing_fi.py' [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __name__
            obj: test_module_to_module_routing_fi
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __package__
            obj: 
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __spec__
            obj: ModuleSpec(name='test_module_to_module_routing_fi', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>, origin='/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_to_module_routing_fi.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __file__
            obj: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_to_module_routing_fi.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __cached__
            obj: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_module_to_module_routing_fi.cpython-36-PYTEST.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'BufferError': <class 'BufferError'>, 'MemoryError': <class 'MemoryError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': See https://www.python.org/psf/license/, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: pytest
            obj: <module 'pytest' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: connections
            obj: <module 'connections' from '/home/bertk/repos/e2e-fx/test-runner/connections.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: get_current_config
            obj: <function get_current_config at 0x7f0a6fb420d0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: connect_edgehub
            obj: <function connect_edgehub at 0x7f0a6f82a048>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: disconnect_edgehub
            obj: <function disconnect_edgehub at 0x7f0a75b71f28>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: restart_edgehub
            obj: <function restart_edgehub at 0x7f0a6f82a0d0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: set_channels
            obj: <function set_channels at 0x7f0a6f7d7488>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: friend_to_test_output
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: friend_to_test_input
            obj: fromFriend
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: test_to_friend_output
            obj: toFriend
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: test_to_friend_input
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: receive_timeout
            obj: 60
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: test_module_to_friend_routing
            obj: <function test_module_to_friend_routing at 0x7f0a6f7d7400>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f83efd0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_to_friend_routing'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: test_friend_to_module_routing_fi
            obj: <function test_friend_to_module_routing_fi at 0x7f0a6f7d7510>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f7e4470>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_friend_to_module_routing_fi'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __new__
            obj: <built-in method __new__ of type object at 0x55ebbe0e3500>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_to_module_routing_fi.py'>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'edge_module_fi_tests/test_module_to_module_routing_fi.py' lenresult=2 outcome='passed'> [hook]
    genitems <Function 'test_module_to_friend_routing'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_to_friend_routing'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_friend_to_module_routing_fi'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_friend_to_module_routing_fi'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'edge_module_fi_tests/test_module_to_module_routing_fi.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module 'test_module_twin_desired_properties_fi.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'test_module_twin_desired_properties_fi.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'test_module_twin_desired_properties_fi.py'>
      find_module called for: test_module_twin_desired_properties_fi [assertion]
      matched test file '/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_twin_desired_properties_fi.py' [assertion]
      found cached rewritten pyc for '/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_twin_desired_properties_fi.py' [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __name__
            obj: test_module_twin_desired_properties_fi
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __package__
            obj: 
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __spec__
            obj: ModuleSpec(name='test_module_twin_desired_properties_fi', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>, origin='/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_twin_desired_properties_fi.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __file__
            obj: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_twin_desired_properties_fi.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __cached__
            obj: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_module_twin_desired_properties_fi.cpython-36-PYTEST.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'BufferError': <class 'BufferError'>, 'MemoryError': <class 'MemoryError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': See https://www.python.org/psf/license/, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: pytest
            obj: <module 'pytest' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: random
            obj: <module 'random' from '/home/bertk/env/Python-3.6.6/lib/python3.6/random.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: connections
            obj: <module 'connections' from '/home/bertk/repos/e2e-fx/test-runner/connections.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: time
            obj: <module 'time' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: get_current_config
            obj: <function get_current_config at 0x7f0a6fb420d0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: json
            obj: <module 'json' from '/home/bertk/.pyenv/versions/3.6.6/lib/python3.6/json/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: log_message
            obj: <function print_message at 0x7f0a711cd400>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: connect_edgehub
            obj: <function connect_edgehub at 0x7f0a6f82a048>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: disconnect_edgehub
            obj: <function disconnect_edgehub at 0x7f0a75b71f28>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: restart_edgehub
            obj: <function restart_edgehub at 0x7f0a6f82a0d0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: sleep
            obj: <built-in function sleep>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: docker
            obj: <module 'docker' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/docker/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: client
            obj: <docker.client.DockerClient object at 0x7f0a6f7e4470>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: wait_time_for_desired_property_updates
            obj: 5
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: get_patch_received
            obj: <function get_patch_received at 0x7f0a6f7d77b8>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: test_service_can_set_desired_properties_and_module_can_retrieve_them_fi
            obj: <function test_service_can_set_desired_properties_and_module_can_retrieve_them_fi at 0x7f0a6f7d7730>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f7e4cf8>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_service_can_set_desired_properties_and_module_can_retrieve_them_fi'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: test_service_can_set_multiple_desired_property_patches_and_module_can_retrieve_them_as_events_fi
            obj: <function test_service_can_set_multiple_desired_property_patches_and_module_can_retrieve_them_as_events_fi at 0x7f0a6f7d78c8>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f7eb048>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_service_can_set_multiple_desired_property_patches_and_module_can_retrieve_them_as_events_fi'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __new__
            obj: <built-in method __new__ of type object at 0x55ebbe0e3500>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_desired_properties_fi.py'>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'edge_module_fi_tests/test_module_twin_desired_properties_fi.py' lenresult=2 outcome='passed'> [hook]
    genitems <Function 'test_service_can_set_desired_properties_and_module_can_retrieve_them_fi'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_service_can_set_desired_properties_and_module_can_retrieve_them_fi'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_service_can_set_multiple_desired_property_patches_and_module_can_retrieve_them_as_events_fi'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_service_can_set_multiple_desired_property_patches_and_module_can_retrieve_them_as_events_fi'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'edge_module_fi_tests/test_module_twin_desired_properties_fi.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module 'test_module_twin_reported_properties_fi.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'test_module_twin_reported_properties_fi.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'test_module_twin_reported_properties_fi.py'>
      find_module called for: test_module_twin_reported_properties_fi [assertion]
      matched test file '/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_twin_reported_properties_fi.py' [assertion]
      found cached rewritten pyc for '/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_twin_reported_properties_fi.py' [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __name__
            obj: test_module_twin_reported_properties_fi
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __package__
            obj: 
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __spec__
            obj: ModuleSpec(name='test_module_twin_reported_properties_fi', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0a728226a0>, origin='/home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_twin_reported_properties_fi.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __file__
            obj: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/test_module_twin_reported_properties_fi.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __cached__
            obj: /home/bertk/repos/e2e-fx/test-runner/edge_module_fi_tests/__pycache__/test_module_twin_reported_properties_fi.cpython-36-PYTEST.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'BufferError': <class 'BufferError'>, 'MemoryError': <class 'MemoryError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': See https://www.python.org/psf/license/, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: pytest
            obj: <module 'pytest' from '/home/bertk/env/Python-3.6.6/lib/python3.6/site-packages/pytest.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: random
            obj: <module 'random' from '/home/bertk/env/Python-3.6.6/lib/python3.6/random.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: connections
            obj: <module 'connections' from '/home/bertk/repos/e2e-fx/test-runner/connections.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: get_current_config
            obj: <function get_current_config at 0x7f0a6fb420d0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: log_message
            obj: <function print_message at 0x7f0a711cd400>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: edgeHub
            obj: <Container: 9396e9d0a2>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: disconnect_edgehub
            obj: <function disconnect_edgehub at 0x7f0a75b71f28>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: connect_edgehub
            obj: <function connect_edgehub at 0x7f0a6f82a048>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: restart_edgehub
            obj: <function restart_edgehub at 0x7f0a6f82a0d0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: sleep
            obj: <built-in function sleep>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: test_module_can_set_reported_properties_and_service_can_retrieve_them_fi
            obj: <function test_module_can_set_reported_properties_and_service_can_retrieve_them_fi at 0x7f0a6f7d7840>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0a6f7eb588>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_module_can_set_reported_properties_and_service_can_retrieve_them_fi'>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __new__
            obj: <built-in method __new__ of type object at 0x55ebbe0e3500>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module 'test_module_twin_reported_properties_fi.py'>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'edge_module_fi_tests/test_module_twin_reported_properties_fi.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function 'test_module_can_set_reported_properties_and_service_can_retrieve_them_fi'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_module_can_set_reported_properties_and_service_can_retrieve_them_fi'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'edge_module_fi_tests/test_module_twin_reported_properties_fi.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package '/home/bertk/repos/e2e-fx/test-runner/models'> [collection]
      pytest_collectstart [hook]
          collector: <Package '/home/bertk/repos/e2e-fx/test-runner/models'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package '/home/bertk/repos/e2e-fx/test-runner/models'>
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/models/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/models/__pycache__
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/models'>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/models/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/models/hub_event.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/models/hub_event.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/models'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/models/__pycache__/__init__.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/models/__pycache__/__init__.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/models'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/models/__pycache__/hub_event.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/models/__pycache__/hub_event.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/models'>
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'models/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'models/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi'> [collection]
      pytest_collectstart [hook]
          collector: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi'>
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/__pycache__
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi'>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi'>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi'>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/azure_iot_end_to_end_test_wrapper_rest_api.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/azure_iot_end_to_end_test_wrapper_rest_api.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/version.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/version.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/__pycache__/__init__.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/__pycache__/__init__.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/__pycache__/azure_iot_end_to_end_test_wrapper_rest_api.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/__pycache__/azure_iot_end_to_end_test_wrapper_rest_api.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/__pycache__/version.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/__pycache__/version.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/__pycache__
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi'>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/__init__.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/__init__.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi'>
          pytest_pycollect_makemodule [hook]
              path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/__init__.py
              parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi'>
          finish pytest_pycollect_makemodule --> <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models'> [hook]
        finish pytest_collect_file --> [<Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models'>] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__pycache__
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi'>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__init__.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__init__.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi'>
          pytest_pycollect_makemodule [hook]
              path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__init__.py
              parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi'>
          finish pytest_pycollect_makemodule --> <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations'> [hook]
        finish pytest_collect_file --> [<Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations'>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'rest_wrappers/generated/e2erestapi/__init__.py' lenresult=2 outcome='passed'> [hook]
    genitems <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models'> [collection]
      pytest_collectstart [hook]
          collector: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models'>
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/__pycache__
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models'>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/certificate.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/certificate.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/connect_response.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/connect_response.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/roundtrip_method_call_body.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/roundtrip_method_call_body.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/__pycache__/__init__.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/__pycache__/__init__.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/__pycache__/certificate.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/__pycache__/certificate.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/__pycache__/connect_response.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/__pycache__/connect_response.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/__pycache__/roundtrip_method_call_body.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models/__pycache__/roundtrip_method_call_body.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/models'>
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'rest_wrappers/generated/e2erestapi/models/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'rest_wrappers/generated/e2erestapi/models/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations'> [collection]
      pytest_collectstart [hook]
          collector: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations'>
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_directory [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__pycache__
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations'>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__pycache__
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/device_operations.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/device_operations.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/module_operations.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/module_operations.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/registry_operations.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/registry_operations.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/service_operations.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/service_operations.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/wrapper_operations.py
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/wrapper_operations.py
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__pycache__/__init__.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__pycache__/__init__.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__pycache__/device_operations.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__pycache__/device_operations.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__pycache__/module_operations.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__pycache__/module_operations.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__pycache__/registry_operations.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__pycache__/registry_operations.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__pycache__/service_operations.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__pycache__/service_operations.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations'>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__pycache__/wrapper_operations.cpython-36.pyc
            config: <_pytest.config.Config object at 0x7f0a72d93860>
        finish pytest_ignore_collect --> False [hook]
        pytest_collect_file [hook]
            path: /home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations/__pycache__/wrapper_operations.cpython-36.pyc
            parent: <Package '/home/bertk/repos/e2e-fx/test-runner/rest_wrappers/generated/e2erestapi/operations'>
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'rest_wrappers/generated/e2erestapi/operations/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'rest_wrappers/generated/e2erestapi/operations/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'rest_wrappers/generated/e2erestapi/__init__.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session 'test-runner'>
          config: <_pytest.config.Config object at 0x7f0a72d93860>
          items: [<Function 'test_client_connect_disconnect'>, <Function 'test_module_client_connect_enable_methods_disconnect'>, <Function 'test_method_call_invoked_from_service'>, <Function 'test_method_call_invoked_from_friend'>, <Function 'test_client_connect_disconnect'>, <Function 'test_module_client_connect_enable_input_messages_disconnect'>, <Function 'test_module_to_friend_routing'>, <Function 'test_module_to_friend_routing_hubevent[64 character string]'>, <Function 'test_module_to_friend_routing_hubevent[1K character string]'>, <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>, <Function 'test_module_to_friend_routing_hubevent[64k character string]'>, <Function 'test_module_to_friend_routing_hubevent[simple object]'>, <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>, <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>, <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>, <Function 'test_friend_to_module_routing'>, <Function 'test_module_test_to_friend_and_back'>, <Function 'test_module_output_routed_upstream'>, <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>, <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>, <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>, <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>, <Function 'test_module_output_routed_upstream_hubevent[simple object]'>, <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>, <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>, <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>, <Function 'test_module_input_output_loopback'>, <Function 'test_module_input_output_loopback_hubevent[64 character string]'>, <Function 'test_module_input_output_loopback_hubevent[1K character string]'>, <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>, <Function 'test_module_input_output_loopback_hubevent[64k character string]'>, <Function 'test_module_input_output_loopback_hubevent[simple object]'>, <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>, <Function 'test_module_input_output_loopback_hubevent[object with 3 layers]'>, <Function 'test_module_input_output_loopback_hubevent[object with 3 layers, as string]'>, <Function 'test_module_client_connect_enable_methods_disconnect'>, <Function 'test_method_call_invoked_from_service'>, <Function 'test_method_call_invoked_from_friend'>, <Function 'test_method_call_invoked_on_friend'>, <Function 'test_method_call_invoked_on_leaf_device'>, <Function 'test_send_event_to_iothub'>, <Function 'test_device_send_string_using_new_message_format[64 character string]'>, <Function 'test_device_send_string_using_new_message_format[1K character string]'>, <Function 'test_device_send_string_using_new_message_format[2000 character string]'>, <Function 'test_device_send_string_using_new_message_format[64k character string]'>, <Function 'test_device_send_string_using_new_message_format[simple object]'>, <Function 'test_device_send_string_using_new_message_format[simple object, as string]'>, <Function 'test_device_send_string_using_new_message_format[object with 3 layers]'>, <Function 'test_device_send_string_using_new_message_format[object with 3 layers, as string]'>, <Function 'test_client_connect_enable_twin_disconnect'>, <Function 'test_service_can_set_desired_properties_and_client_can_retrieve_them'>, <Function 'test_service_can_set_multiple_desired_property_patches_and_client_can_retrieve_them_as_events'>, <Function 'test_module_can_set_reported_properties_and_service_can_retrieve_them'>, <Function 'test_client_connect_disconnect'>, <Function 'test_client_connect_enable_c2d_disconnect'>, <Function 'test_device_receive_c2d'>, <Function 'test_module_client_connect_enable_methods_disconnect'>, <Function 'test_method_call_invoked_from_service'>, <Function 'test_send_event_to_iothub'>, <Function 'test_device_send_string_using_new_message_format[64 character string]'>, <Function 'test_device_send_string_using_new_message_format[1K character string]'>, <Function 'test_device_send_string_using_new_message_format[2000 character string]'>, <Function 'test_device_send_string_using_new_message_format[64k character string]'>, <Function 'test_device_send_string_using_new_message_format[simple object]'>, <Function 'test_device_send_string_using_new_message_format[simple object, as string]'>, <Function 'test_device_send_string_using_new_message_format[object with 3 layers]'>, <Function 'test_device_send_string_using_new_message_format[object with 3 layers, as string]'>, <Function 'test_client_connect_enable_twin_disconnect'>, <Function 'test_service_can_set_desired_properties_and_client_can_retrieve_them'>, <Function 'test_service_can_set_multiple_desired_property_patches_and_client_can_retrieve_them_as_events'>, <Function 'test_module_can_set_reported_properties_and_service_can_retrieve_them'>, <Function 'test_client_connect_disconnect'>, <Function 'test_send_event_to_iothub'>, <Function 'test_device_send_string_using_new_message_format[64 character string]'>, <Function 'test_device_send_string_using_new_message_format[1K character string]'>, <Function 'test_device_send_string_using_new_message_format[2000 character string]'>, <Function 'test_device_send_string_using_new_message_format[64k character string]'>, <Function 'test_device_send_string_using_new_message_format[simple object]'>, <Function 'test_device_send_string_using_new_message_format[simple object, as string]'>, <Function 'test_device_send_string_using_new_message_format[object with 3 layers]'>, <Function 'test_device_send_string_using_new_message_format[object with 3 layers, as string]'>, <Function 'test_client_connect_enable_twin_disconnect'>, <Function 'test_service_can_set_desired_properties_and_client_can_retrieve_them'>, <Function 'test_service_can_set_multiple_desired_property_patches_and_client_can_retrieve_them_as_events'>, <Function 'test_module_can_set_reported_properties_and_service_can_retrieve_them'>, <Function 'test_module_client_connect_enable_twin_disconnect_fi'>, <Function 'test_module_client_connect_enable_methods_disconnect_fi'>, <Function 'test_module_client_connect_enable_input_messages_disconnect_fi'>, <Function 'test_device_client_connect_disconnect_fi'>, <Function 'test_device_client_connect_enable_methods_disconnect_fi'>, <Function 'test_device_method_from_service_to_leaf_device_fi'>, <Function 'test_device_method_from_module_to_leaf_device_fi'>, <Function 'test_module_method_call_invoked_from_service'>, <Function 'test_module_method_from_test_to_friend_fi'>, <Function 'test_module_method_from_friend_to_test_fi'>, <Function 'test_module_output_routed_upstream_fi'>, <Function 'test_module_send_event_iothub_fi'>, <Function 'test_module_to_friend_routing'>, <Function 'test_friend_to_module_routing_fi'>, <Function 'test_service_can_set_desired_properties_and_module_can_retrieve_them_fi'>, <Function 'test_service_can_set_multiple_desired_property_patches_and_module_can_retrieve_them_as_events_fi'>, <Function 'test_module_can_set_reported_properties_and_service_can_retrieve_them_fi'>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session 'test-runner'>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x7f0a72d93860>
            startdir: /home/bertk/repos/e2e-fx/test-runner
            items: [<Function 'test_client_connect_disconnect'>, <Function 'test_module_client_connect_enable_methods_disconnect'>, <Function 'test_method_call_invoked_from_service'>, <Function 'test_method_call_invoked_from_friend'>, <Function 'test_client_connect_disconnect'>, <Function 'test_module_client_connect_enable_input_messages_disconnect'>, <Function 'test_module_to_friend_routing'>, <Function 'test_module_to_friend_routing_hubevent[64 character string]'>, <Function 'test_module_to_friend_routing_hubevent[1K character string]'>, <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>, <Function 'test_module_to_friend_routing_hubevent[64k character string]'>, <Function 'test_module_to_friend_routing_hubevent[simple object]'>, <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>, <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>, <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>, <Function 'test_friend_to_module_routing'>, <Function 'test_module_test_to_friend_and_back'>, <Function 'test_module_output_routed_upstream'>, <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>, <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>, <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>, <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>, <Function 'test_module_output_routed_upstream_hubevent[simple object]'>, <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>, <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>, <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>, <Function 'test_module_input_output_loopback'>, <Function 'test_module_input_output_loopback_hubevent[64 character string]'>, <Function 'test_module_input_output_loopback_hubevent[1K character string]'>, <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>, <Function 'test_module_input_output_loopback_hubevent[64k character string]'>, <Function 'test_module_input_output_loopback_hubevent[simple object]'>, <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>, <Function 'test_module_input_output_loopback_hubevent[object with 3 layers]'>, <Function 'test_module_input_output_loopback_hubevent[object with 3 layers, as string]'>, <Function 'test_module_client_connect_enable_methods_disconnect'>, <Function 'test_method_call_invoked_from_service'>, <Function 'test_method_call_invoked_from_friend'>, <Function 'test_method_call_invoked_on_friend'>, <Function 'test_method_call_invoked_on_leaf_device'>, <Function 'test_send_event_to_iothub'>, <Function 'test_device_send_string_using_new_message_format[64 character string]'>, <Function 'test_device_send_string_using_new_message_format[1K character string]'>, <Function 'test_device_send_string_using_new_message_format[2000 character string]'>, <Function 'test_device_send_string_using_new_message_format[64k character string]'>, <Function 'test_device_send_string_using_new_message_format[simple object]'>, <Function 'test_device_send_string_using_new_message_format[simple object, as string]'>, <Function 'test_device_send_string_using_new_message_format[object with 3 layers]'>, <Function 'test_device_send_string_using_new_message_format[object with 3 layers, as string]'>, <Function 'test_client_connect_enable_twin_disconnect'>, <Function 'test_service_can_set_desired_properties_and_client_can_retrieve_them'>, <Function 'test_service_can_set_multiple_desired_property_patches_and_client_can_retrieve_them_as_events'>, <Function 'test_module_can_set_reported_properties_and_service_can_retrieve_them'>]
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> [<Function 'test_client_connect_disconnect'>, <Function 'test_module_client_connect_enable_methods_disconnect'>, <Function 'test_method_call_invoked_from_service'>, <Function 'test_method_call_invoked_from_friend'>, <Function 'test_client_connect_disconnect'>, <Function 'test_module_client_connect_enable_input_messages_disconnect'>, <Function 'test_module_to_friend_routing'>, <Function 'test_module_to_friend_routing_hubevent[64 character string]'>, <Function 'test_module_to_friend_routing_hubevent[1K character string]'>, <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>, <Function 'test_module_to_friend_routing_hubevent[64k character string]'>, <Function 'test_module_to_friend_routing_hubevent[simple object]'>, <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>, <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>, <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>, <Function 'test_friend_to_module_routing'>, <Function 'test_module_test_to_friend_and_back'>, <Function 'test_module_output_routed_upstream'>, <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>, <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>, <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>, <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>, <Function 'test_module_output_routed_upstream_hubevent[simple object]'>, <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>, <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>, <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>, <Function 'test_module_input_output_loopback'>, <Function 'test_module_input_output_loopback_hubevent[64 character string]'>, <Function 'test_module_input_output_loopback_hubevent[1K character string]'>, <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>, <Function 'test_module_input_output_loopback_hubevent[64k character string]'>, <Function 'test_module_input_output_loopback_hubevent[simple object]'>, <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>, <Function 'test_module_input_output_loopback_hubevent[object with 3 layers]'>, <Function 'test_module_input_output_loopback_hubevent[object with 3 layers, as string]'>, <Function 'test_module_client_connect_enable_methods_disconnect'>, <Function 'test_method_call_invoked_from_service'>, <Function 'test_method_call_invoked_from_friend'>, <Function 'test_method_call_invoked_on_friend'>, <Function 'test_method_call_invoked_on_leaf_device'>, <Function 'test_send_event_to_iothub'>, <Function 'test_device_send_string_using_new_message_format[64 character string]'>, <Function 'test_device_send_string_using_new_message_format[1K character string]'>, <Function 'test_device_send_string_using_new_message_format[2000 character string]'>, <Function 'test_device_send_string_using_new_message_format[64k character string]'>, <Function 'test_device_send_string_using_new_message_format[simple object]'>, <Function 'test_device_send_string_using_new_message_format[simple object, as string]'>, <Function 'test_device_send_string_using_new_message_format[object with 3 layers]'>, <Function 'test_device_send_string_using_new_message_format[object with 3 layers, as string]'>, <Function 'test_client_connect_enable_twin_disconnect'>, <Function 'test_service_can_set_desired_properties_and_client_can_retrieve_them'>, <Function 'test_service_can_set_multiple_desired_property_patches_and_client_can_retrieve_them_as_events'>, <Function 'test_module_can_set_reported_properties_and_service_can_retrieve_them'>] [hook]
    pytest_runtestloop [hook]
        session: <Session 'test-runner'>
      pytest_runtest_protocol [hook]
          item: <Function 'test_client_connect_disconnect'>
          nextitem: <Function 'test_module_client_connect_enable_methods_disconnect'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_client_connect_disconnect
            location: ('base_client_tests.py', 9, 'TestIotHubModuleClient.test_client_connect_disconnect')
        early skip of rewriting module: py._io.capture [assertion]
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_client_connect_disconnect'>
        early skip of rewriting module: __init__ [assertion]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='session_log_fixture' scope='session' baseid='' >
              request: <SubRequest 'session_log_fixture' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='module_log_fixture' scope='module' baseid='' >
              request: <SubRequest 'module_log_fixture' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='leaf_device' scope='function' baseid='' >
              request: <SubRequest 'leaf_device' for <Function 'test_client_connect_disconnect'>>
          early skip of rewriting module: multiprocessing.dummy [assertion]
          early skip of rewriting module: multiprocessing.dummy.connection [assertion]
          finish pytest_fixture_setup --> <adapters.rest.rest_device_api.DeviceApi object at 0x7f0a6ef22710> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_leaf_device.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_device_api.DeviceApi object at 0x7f0a6ef22710> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_client_connect_disconnect'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_client_connect_disconnect' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_client_connect_disconnect' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_client_connect_disconnect' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_client_connect_disconnect'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_client_connect_disconnect'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_client_connect_disconnect'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_client_connect_disconnect' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_client_connect_disconnect' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_client_connect_disconnect' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_client_connect_disconnect'>
            nextitem: <Function 'test_module_client_connect_enable_methods_disconnect'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_leaf_device.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_leaf_device.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='leaf_device' scope='function' baseid='' >
              request: <SubRequest 'leaf_device' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_client_connect_disconnect'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_client_connect_disconnect' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_client_connect_disconnect' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_client_connect_disconnect' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_client_connect_disconnect
            location: ('base_client_tests.py', 9, 'TestIotHubModuleClient.test_client_connect_disconnect')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_client_connect_enable_methods_disconnect'>
          nextitem: <Function 'test_method_call_invoked_from_service'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_module_client_connect_enable_methods_disconnect
            location: ('method_tests.py', 73, 'TestIotHubModuleClient.test_module_client_connect_enable_methods_disconnect')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_client_connect_enable_methods_disconnect'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_client_connect_enable_methods_disconnect'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_client_connect_enable_methods_disconnect'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='leaf_device' scope='function' baseid='' >
              request: <SubRequest 'leaf_device' for <Function 'test_module_client_connect_enable_methods_disconnect'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_device_api.DeviceApi object at 0x7f0a6ced4b00> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_leaf_device.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_client_connect_enable_methods_disconnect'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_device_api.DeviceApi object at 0x7f0a6ced4b00> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_client_connect_enable_methods_disconnect'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_module_client_connect_enable_methods_disconnect' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_module_client_connect_enable_methods_disconnect' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_module_client_connect_enable_methods_disconnect' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_client_connect_enable_methods_disconnect'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_client_connect_enable_methods_disconnect'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_client_connect_enable_methods_disconnect'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_module_client_connect_enable_methods_disconnect' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_module_client_connect_enable_methods_disconnect' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_module_client_connect_enable_methods_disconnect' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_client_connect_enable_methods_disconnect'>
            nextitem: <Function 'test_method_call_invoked_from_service'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_leaf_device.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_client_connect_enable_methods_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_leaf_device.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_client_connect_enable_methods_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='leaf_device' scope='function' baseid='' >
              request: <SubRequest 'leaf_device' for <Function 'test_module_client_connect_enable_methods_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_client_connect_enable_methods_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_client_connect_enable_methods_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_client_connect_enable_methods_disconnect'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_module_client_connect_enable_methods_disconnect' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_module_client_connect_enable_methods_disconnect' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_module_client_connect_enable_methods_disconnect' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_module_client_connect_enable_methods_disconnect
            location: ('method_tests.py', 73, 'TestIotHubModuleClient.test_module_client_connect_enable_methods_disconnect')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_method_call_invoked_from_service'>
          nextitem: <Function 'test_method_call_invoked_from_friend'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_service
            location: ('method_tests.py', 82, 'TestIotHubModuleClient.test_method_call_invoked_from_service')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_method_call_invoked_from_service'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_method_call_invoked_from_service'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_method_call_invoked_from_service'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='leaf_device' scope='function' baseid='' >
              request: <SubRequest 'leaf_device' for <Function 'test_method_call_invoked_from_service'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_device_api.DeviceApi object at 0x7f0a6f804ac8> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_leaf_device.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_method_call_invoked_from_service'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_device_api.DeviceApi object at 0x7f0a6f804ac8> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='service' scope='function' baseid='' >
              request: <SubRequest 'service' for <Function 'test_method_call_invoked_from_service'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_service_api.ServiceApi object at 0x7f0a6f7bcb70> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='logger' scope='function' baseid='' >
              request: <SubRequest 'logger' for <Function 'test_method_call_invoked_from_service'>>
          finish pytest_fixture_setup --> <function print_message at 0x7f0a711cd400> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_method_call_invoked_from_service'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_service' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_service' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_service' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_method_call_invoked_from_service'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_method_call_invoked_from_service'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_method_call_invoked_from_service'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_service' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_service' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_service' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_method_call_invoked_from_service'>
            nextitem: <Function 'test_method_call_invoked_from_friend'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='logger' scope='function' baseid='' >
              request: <SubRequest 'logger' for <Function 'test_method_call_invoked_from_service'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='service' scope='function' baseid='' >
              request: <SubRequest 'service' for <Function 'test_method_call_invoked_from_service'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_leaf_device.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_method_call_invoked_from_service'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_leaf_device.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_method_call_invoked_from_service'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='leaf_device' scope='function' baseid='' >
              request: <SubRequest 'leaf_device' for <Function 'test_method_call_invoked_from_service'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_method_call_invoked_from_service'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_method_call_invoked_from_service'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_method_call_invoked_from_service'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_service' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_service' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_service' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_service
            location: ('method_tests.py', 82, 'TestIotHubModuleClient.test_method_call_invoked_from_service')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_method_call_invoked_from_friend'>
          nextitem: <Function 'test_client_connect_disconnect'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_friend
            location: ('method_tests.py', 95, 'TestIotHubModuleClient.test_method_call_invoked_from_friend')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_method_call_invoked_from_friend'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_method_call_invoked_from_friend'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_method_call_invoked_from_friend'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='leaf_device' scope='function' baseid='' >
              request: <SubRequest 'leaf_device' for <Function 'test_method_call_invoked_from_friend'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_device_api.DeviceApi object at 0x7f0a6ef37748> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_leaf_device.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_method_call_invoked_from_friend'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_device_api.DeviceApi object at 0x7f0a6ef37748> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_method_call_invoked_from_friend'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ef293c8> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='logger' scope='function' baseid='' >
              request: <SubRequest 'logger' for <Function 'test_method_call_invoked_from_friend'>>
          finish pytest_fixture_setup --> <function print_message at 0x7f0a711cd400> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_method_call_invoked_from_friend'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_friend' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_friend' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_friend' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_method_call_invoked_from_friend'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_method_call_invoked_from_friend'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_method_call_invoked_from_friend'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_friend' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_friend' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_friend' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_method_call_invoked_from_friend'>
            nextitem: <Function 'test_client_connect_disconnect'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='logger' scope='function' baseid='' >
              request: <SubRequest 'logger' for <Function 'test_method_call_invoked_from_friend'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_method_call_invoked_from_friend'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_leaf_device.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_method_call_invoked_from_friend'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_leaf_device.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_method_call_invoked_from_friend'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='leaf_device' scope='function' baseid='' >
              request: <SubRequest 'leaf_device' for <Function 'test_method_call_invoked_from_friend'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_method_call_invoked_from_friend'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_method_call_invoked_from_friend'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='module_log_fixture' scope='module' baseid='' >
              request: <SubRequest 'module_log_fixture' for <Function 'test_method_call_invoked_from_friend'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='module_log_fixture' scope='module' baseid='' >
              request: <SubRequest 'module_log_fixture' for <Function 'test_method_call_invoked_from_service'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='module_log_fixture' scope='module' baseid='' >
              request: <SubRequest 'module_log_fixture' for <Function 'test_module_client_connect_enable_methods_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='module_log_fixture' scope='module' baseid='' >
              request: <SubRequest 'module_log_fixture' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_method_call_invoked_from_friend'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_friend' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_friend' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_friend' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_leaf_device.py::TestIotHubModuleClient::()::test_method_call_invoked_from_friend
            location: ('method_tests.py', 95, 'TestIotHubModuleClient.test_method_call_invoked_from_friend')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_client_connect_disconnect'>
          nextitem: <Function 'test_module_client_connect_enable_input_messages_disconnect'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_client_connect_disconnect
            location: ('base_client_tests.py', 9, 'TestIotHubModuleClient.test_client_connect_disconnect')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_client_connect_disconnect'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='module_log_fixture' scope='module' baseid='' >
              request: <SubRequest 'module_log_fixture' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6f7a32e8> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6f7a32e8> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_client_connect_disconnect'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_client_connect_disconnect' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_client_connect_disconnect' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_client_connect_disconnect' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_client_connect_disconnect'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_client_connect_disconnect'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_client_connect_disconnect'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_client_connect_disconnect' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_client_connect_disconnect' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_client_connect_disconnect' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_client_connect_disconnect'>
            nextitem: <Function 'test_module_client_connect_enable_input_messages_disconnect'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_client_connect_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_client_connect_disconnect'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_client_connect_disconnect' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_client_connect_disconnect' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_client_connect_disconnect' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_client_connect_disconnect
            location: ('base_client_tests.py', 9, 'TestIotHubModuleClient.test_client_connect_disconnect')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_client_connect_enable_input_messages_disconnect'>
          nextitem: <Function 'test_module_to_friend_routing'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_client_connect_enable_input_messages_disconnect
            location: ('input_output_tests.py', 30, 'TestIotHubModuleClient.test_module_client_connect_enable_input_messages_disconnect')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_client_connect_enable_input_messages_disconnect'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_client_connect_enable_input_messages_disconnect'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_client_connect_enable_input_messages_disconnect'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_client_connect_enable_input_messages_disconnect'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6cee2550> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_client_connect_enable_input_messages_disconnect'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6cee2550> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_client_connect_enable_input_messages_disconnect'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_client_connect_enable_input_messages_disconnect' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_client_connect_enable_input_messages_disconnect' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_client_connect_enable_input_messages_disconnect' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_client_connect_enable_input_messages_disconnect'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_client_connect_enable_input_messages_disconnect'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_client_connect_enable_input_messages_disconnect'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_client_connect_enable_input_messages_disconnect' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_client_connect_enable_input_messages_disconnect' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_client_connect_enable_input_messages_disconnect' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_client_connect_enable_input_messages_disconnect'>
            nextitem: <Function 'test_module_to_friend_routing'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_client_connect_enable_input_messages_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_client_connect_enable_input_messages_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_client_connect_enable_input_messages_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_client_connect_enable_input_messages_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_client_connect_enable_input_messages_disconnect'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_client_connect_enable_input_messages_disconnect'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_client_connect_enable_input_messages_disconnect' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_client_connect_enable_input_messages_disconnect' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_client_connect_enable_input_messages_disconnect' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_client_connect_enable_input_messages_disconnect
            location: ('input_output_tests.py', 30, 'TestIotHubModuleClient.test_module_client_connect_enable_input_messages_disconnect')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_to_friend_routing'>
          nextitem: <Function 'test_module_to_friend_routing_hubevent[64 character string]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing
            location: ('input_output_tests.py', 37, 'TestIotHubModuleClient.test_module_to_friend_routing')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_to_friend_routing'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_to_friend_routing'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_to_friend_routing'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_to_friend_routing'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ceec358> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ceec358> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_module_to_friend_routing'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ceecf60> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_string' scope='function' baseid='' >
              request: <SubRequest 'test_string' for <Function 'test_module_to_friend_routing'>>
          finish pytest_fixture_setup --> String1:JM1KUPKOD4SU29U5VXX8HV12SZUD69E56OTMUPZNNTXQ0OUL2VCR3UUWVTX7SN9M [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing'>>
          finish pytest_fixture_setup --> frompythonpreviewMod [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_to_friend_routing'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_to_friend_routing'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_to_friend_routing'>
            nextitem: <Function 'test_module_to_friend_routing_hubevent[64 character string]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_string' scope='function' baseid='' >
              request: <SubRequest 'test_string' for <Function 'test_module_to_friend_routing'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_module_to_friend_routing'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_to_friend_routing'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_to_friend_routing'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_to_friend_routing'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing
            location: ('input_output_tests.py', 37, 'TestIotHubModuleClient.test_module_to_friend_routing')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_to_friend_routing_hubevent[64 character string]'>
          nextitem: <Function 'test_module_to_friend_routing_hubevent[1K character string]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64 character string]
            location: ('input_output_tests.py', 54, 'TestIotHubModuleClient.test_module_to_friend_routing_hubevent[64 character string]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[64 character string]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_to_friend_routing_hubevent[64 character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_to_friend_routing_hubevent[64 character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_to_friend_routing_hubevent[64 character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ceec6a0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[64 character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ceec6a0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_module_to_friend_routing_hubevent[64 character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ef29208> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[64 character string]'>>
          finish pytest_fixture_setup --> frompythonpreviewMod [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_to_friend_routing_hubevent[64 character string]'>>
          finish pytest_fixture_setup --> 64-chars:9DIEB8CY9CJM7YGQLX9NRZVQ08G8JZ7LV150A2DC5IDBLXG8S0QBIF6IAWOHO3G3 [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[64 character string]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64 character string]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64 character string]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64 character string]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[64 character string]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_to_friend_routing_hubevent[64 character string]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[64 character string]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64 character string]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64 character string]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64 character string]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[64 character string]'>
            nextitem: <Function 'test_module_to_friend_routing_hubevent[1K character string]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_to_friend_routing_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_module_to_friend_routing_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_to_friend_routing_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_to_friend_routing_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_to_friend_routing_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[64 character string]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64 character string]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64 character string]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64 character string]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64 character string]
            location: ('input_output_tests.py', 54, 'TestIotHubModuleClient.test_module_to_friend_routing_hubevent[64 character string]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_to_friend_routing_hubevent[1K character string]'>
          nextitem: <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[1K character string]
            location: ('input_output_tests.py', 54, 'TestIotHubModuleClient.test_module_to_friend_routing_hubevent[1K character string]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[1K character string]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_to_friend_routing_hubevent[1K character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_to_friend_routing_hubevent[1K character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_to_friend_routing_hubevent[1K character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ef37a20> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[1K character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ef37a20> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_module_to_friend_routing_hubevent[1K character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ced4908> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[1K character string]'>>
          finish pytest_fixture_setup --> frompythonpreviewMod [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_to_friend_routing_hubevent[1K character string]'>>
          finish pytest_fixture_setup --> 1K-charshook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[1K character string]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[1K character string]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[1K character string]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[1K character string]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[1K character string]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_to_friend_routing_hubevent[1K character string]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[1K character string]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[1K character string]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[1K character string]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[1K character string]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[1K character string]'>
            nextitem: <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_to_friend_routing_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_module_to_friend_routing_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_to_friend_routing_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_to_friend_routing_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_to_friend_routing_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[1K character string]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[1K character string]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[1K character string]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[1K character string]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[1K character string]
            location: ('input_output_tests.py', 54, 'TestIotHubModuleClient.test_module_to_friend_routing_hubevent[1K character string]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>
          nextitem: <Function 'test_module_to_friend_routing_hubevent[64k character string]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[2000 character string]
            location: ('input_output_tests.py', 54, 'TestIotHubModuleClient.test_module_to_friend_routing_hubevent[2000 character string]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6cee2f98> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6cee2f98> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6cee2908> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>>
          finish pytest_fixture_setup --> frompythonpreviewMod [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>>
          finish pytest_fixture_setup --> 2000-charshook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[2000 character string]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[2000 character string]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[2000 character string]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[2000 character string]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[2000 character string]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[2000 character string]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>
            nextitem: <Function 'test_module_to_friend_routing_hubevent[64k character string]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[2000 character string]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[2000 character string]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[2000 character string]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[2000 character string]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[2000 character string]
            location: ('input_output_tests.py', 54, 'TestIotHubModuleClient.test_module_to_friend_routing_hubevent[2000 character string]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_to_friend_routing_hubevent[64k character string]'>
          nextitem: <Function 'test_module_to_friend_routing_hubevent[simple object]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64k character string]
            location: ('input_output_tests.py', 54, 'TestIotHubModuleClient.test_module_to_friend_routing_hubevent[64k character string]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[64k character string]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_to_friend_routing_hubevent[64k character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_to_friend_routing_hubevent[64k character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_to_friend_routing_hubevent[64k character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ceecb70> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[64k character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ceecb70> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_module_to_friend_routing_hubevent[64k character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6f7d1cf8> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[64k character string]'>>
          finish pytest_fixture_setup --> frompythonpreviewMod [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_to_friend_routing_hubevent[64k character string]'>>
          finish pytest_fixture_setup --> 64K-charshook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[64k character string]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64k character string]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64k character string]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64k character string]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[64k character string]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_to_friend_routing_hubevent[64k character string]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[64k character string]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64k character string]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64k character string]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64k character string]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[64k character string]'>
            nextitem: <Function 'test_module_to_friend_routing_hubevent[simple object]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_to_friend_routing_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_module_to_friend_routing_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_to_friend_routing_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_to_friend_routing_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_to_friend_routing_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[64k character string]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64k character string]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64k character string]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64k character string]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[64k character string]
            location: ('input_output_tests.py', 54, 'TestIotHubModuleClient.test_module_to_friend_routing_hubevent[64k character string]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_to_friend_routing_hubevent[simple object]'>
          nextitem: <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object]
            location: ('input_output_tests.py', 54, 'TestIotHubModuleClient.test_module_to_friend_routing_hubevent[simple object]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[simple object]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_to_friend_routing_hubevent[simple object]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_to_friend_routing_hubevent[simple object]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_to_friend_routing_hubevent[simple object]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eeff6d8> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[simple object]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eeff6d8> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_module_to_friend_routing_hubevent[simple object]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6cef7e10> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[simple object]'>>
          finish pytest_fixture_setup --> frompythonpreviewMod [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_to_friend_routing_hubevent[simple object]'>>
          finish pytest_fixture_setup --> [hook]
              64_chars: 011BWWPG6Y6B7ES3K3A99E154WILB875QAT94N6ZKVRQIM2OLHFJ0L54X4ALBJWW
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[simple object]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[simple object]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_to_friend_routing_hubevent[simple object]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[simple object]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[simple object]'>
            nextitem: <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_to_friend_routing_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_module_to_friend_routing_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_to_friend_routing_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_to_friend_routing_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_to_friend_routing_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[simple object]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object]
            location: ('input_output_tests.py', 54, 'TestIotHubModuleClient.test_module_to_friend_routing_hubevent[simple object]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>
          nextitem: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object, as string]
            location: ('input_output_tests.py', 54, 'TestIotHubModuleClient.test_module_to_friend_routing_hubevent[simple object, as string]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6f7f2588> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6f7f2588> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6cf04a58> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>>
          finish pytest_fixture_setup --> frompythonpreviewMod [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>>
          finish pytest_fixture_setup --> {"64_chars": "011BWWPG6Y6B7ES3K3A99E154WILB875QAT94N6ZKVRQIM2OLHFJ0L54X4ALBJWW"} [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object, as string]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object, as string]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object, as string]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object, as string]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object, as string]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object, as string]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>
            nextitem: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[simple object, as string]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object, as string]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object, as string]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object, as string]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[simple object, as string]
            location: ('input_output_tests.py', 54, 'TestIotHubModuleClient.test_module_to_friend_routing_hubevent[simple object, as string]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>
          nextitem: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers]
            location: ('input_output_tests.py', 54, 'TestIotHubModuleClient.test_module_to_friend_routing_hubevent[object with 3 layers]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ef29438> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ef29438> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6cefc438> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>>
          finish pytest_fixture_setup --> frompythonpreviewMod [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>>
          finish pytest_fixture_setup --> [hook]
              layer_1_string: 1:ZSULNWNL5TH8J3CAMZIUH7611DCRJ56XC59RJNLDSU89MGGV5WHKWKZ4J9IG6ZWF
              layer_2: {'layer_2_string': '2:Q9EDOBFDS7AQLQNTNB57HAIAW74DGTWV89CO1OIVEV9QHZKQDNPKIF970ZBTUCA5', 'layer3': {'fake_number': 3, 'fake_real_number': 1.87}}
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>
            nextitem: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers]
            location: ('input_output_tests.py', 54, 'TestIotHubModuleClient.test_module_to_friend_routing_hubevent[object with 3 layers]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>
          nextitem: <Function 'test_friend_to_module_routing'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers, as string]
            location: ('input_output_tests.py', 54, 'TestIotHubModuleClient.test_module_to_friend_routing_hubevent[object with 3 layers, as string]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ef29be0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ef29be0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eede208> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_setup --> frompythonpreviewMod [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_setup --> {"layer_1_string": "1:ZSULNWNL5TH8J3CAMZIUH7611DCRJ56XC59RJNLDSU89MGGV5WHKWKZ4J9IG6ZWF", "layer_2": {"layer_2_string": "2:Q9EDOBFDS7AQLQNTNB57HAIAW74DGTWV89CO1OIVEV9QHZKQDNPKIF970ZBTUCA5", "layer3": {"fake_number": 3, "fake_real_number": 1.87}}} [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers, as string]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers, as string]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers, as string]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers, as string]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers, as string]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers, as string]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>
            nextitem: <Function 'test_friend_to_module_routing'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_to_friend_routing_hubevent[object with 3 layers, as string]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers, as string]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers, as string]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers, as string]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_to_friend_routing_hubevent[object with 3 layers, as string]
            location: ('input_output_tests.py', 54, 'TestIotHubModuleClient.test_module_to_friend_routing_hubevent[object with 3 layers, as string]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_friend_to_module_routing'>
          nextitem: <Function 'test_module_test_to_friend_and_back'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_friend_to_module_routing
            location: ('input_output_tests.py', 75, 'TestIotHubModuleClient.test_friend_to_module_routing')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_friend_to_module_routing'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_friend_to_module_routing'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_friend_to_module_routing'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_friend_to_module_routing'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eeff550> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_friend_to_module_routing'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eeff550> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_friend_to_module_routing'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6cf043c8> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_string' scope='function' baseid='' >
              request: <SubRequest 'test_string' for <Function 'test_friend_to_module_routing'>>
          finish pytest_fixture_setup --> String1:NSTD31VMU86CMJG0WKSYE3LZY60EBUVAB2H2G3ZZCR4AJUG4OP6R6XB6OY06Z8K4 [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='output_name_to_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'output_name_to_test_client' for <Function 'test_friend_to_module_routing'>>
          finish pytest_fixture_setup --> topythonpreviewMod [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_friend_to_module_routing'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_friend_to_module_routing' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_friend_to_module_routing' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_friend_to_module_routing' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_friend_to_module_routing'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_friend_to_module_routing'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_friend_to_module_routing'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_friend_to_module_routing' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_friend_to_module_routing' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_friend_to_module_routing' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_friend_to_module_routing'>
            nextitem: <Function 'test_module_test_to_friend_and_back'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='output_name_to_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'output_name_to_test_client' for <Function 'test_friend_to_module_routing'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_string' scope='function' baseid='' >
              request: <SubRequest 'test_string' for <Function 'test_friend_to_module_routing'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_friend_to_module_routing'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='output_name_to_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'output_name_to_test_client' for <Function 'test_friend_to_module_routing'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_friend_to_module_routing'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_friend_to_module_routing'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_friend_to_module_routing'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_friend_to_module_routing'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_friend_to_module_routing'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_friend_to_module_routing'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_friend_to_module_routing' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_friend_to_module_routing' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_friend_to_module_routing' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_friend_to_module_routing
            location: ('input_output_tests.py', 75, 'TestIotHubModuleClient.test_friend_to_module_routing')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_test_to_friend_and_back'>
          nextitem: <Function 'test_module_output_routed_upstream'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_test_to_friend_and_back
            location: ('input_output_tests.py', 90, 'TestIotHubModuleClient.test_module_test_to_friend_and_back')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_test_to_friend_and_back'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ef042e8> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ef042e8> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ef29be0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_string' scope='function' baseid='' >
              request: <SubRequest 'test_string' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_setup --> String1:OJVPA6OSBC4YOYOO4NYTXFX8EOUG8YJQDYFFPCB3Q9JIW5A9AUAU1KX8FR6FWSAX [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_string_2' scope='function' baseid='' >
              request: <SubRequest 'test_string_2' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_setup --> String2:9SXSAD6IKFSXX5COSX0ES38RB84REP2VKAZ0CLDJ17AA27AX6J5OE5Z8UTKVDCNC [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_setup --> frompythonpreviewMod [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='output_name_to_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'output_name_to_test_client' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_setup --> topythonpreviewMod [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_test_to_friend_and_back'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_test_to_friend_and_back' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_test_to_friend_and_back' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_test_to_friend_and_back' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_test_to_friend_and_back'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_test_to_friend_and_back'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_test_to_friend_and_back'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_test_to_friend_and_back' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_test_to_friend_and_back' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_test_to_friend_and_back' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_test_to_friend_and_back'>
            nextitem: <Function 'test_module_output_routed_upstream'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='output_name_to_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'output_name_to_test_client' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_string_2' scope='function' baseid='' >
              request: <SubRequest 'test_string_2' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_string' scope='function' baseid='' >
              request: <SubRequest 'test_string' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='friend' scope='function' baseid='' >
              request: <SubRequest 'friend' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='output_name_to_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'output_name_to_test_client' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='input_name_from_test_client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'input_name_from_test_client' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_test_to_friend_and_back'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_test_to_friend_and_back'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_test_to_friend_and_back' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_test_to_friend_and_back' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_test_to_friend_and_back' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_test_to_friend_and_back
            location: ('input_output_tests.py', 90, 'TestIotHubModuleClient.test_module_test_to_friend_and_back')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_output_routed_upstream'>
          nextitem: <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream
            location: ('input_output_tests.py', 123, 'TestIotHubModuleClient.test_module_output_routed_upstream')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_output_routed_upstream'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_output_routed_upstream'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_output_routed_upstream'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_output_routed_upstream'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eead358> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eead358> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='eventhub' scope='function' baseid='' >
              request: <SubRequest 'eventhub' for <Function 'test_module_output_routed_upstream'>>
          finish pytest_fixture_setup --> <adapters.direct_azure_rest.direct_eventhub_api.EventHubApi object at 0x7f0a6cefcfd0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_string' scope='function' baseid='' >
              request: <SubRequest 'test_string' for <Function 'test_module_output_routed_upstream'>>
          finish pytest_fixture_setup --> String1:9H90Q96CHLGFJ1OTQAJ0SKTPM5IVA5C193RLLU6O95OXYLFH27SMGC4W9H577QHO [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_object_stringified' scope='function' baseid='' >
              request: <SubRequest 'test_object_stringified' for <Function 'test_module_output_routed_upstream'>>
          finish pytest_fixture_setup --> { "message": "String1:9H90Q96CHLGFJ1OTQAJ0SKTPM5IVA5C193RLLU6O95OXYLFH27SMGC4W9H577QHO" } [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_output_routed_upstream'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_output_routed_upstream'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_output_routed_upstream'>
            nextitem: <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_object_stringified' scope='function' baseid='' >
              request: <SubRequest 'test_object_stringified' for <Function 'test_module_output_routed_upstream'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_object_stringified' scope='function' baseid='' >
              request: <SubRequest 'test_object_stringified' for <Function 'test_module_output_routed_upstream'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_string' scope='function' baseid='' >
              request: <SubRequest 'test_string' for <Function 'test_module_output_routed_upstream'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='eventhub' scope='function' baseid='' >
              request: <SubRequest 'eventhub' for <Function 'test_module_output_routed_upstream'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_output_routed_upstream'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_output_routed_upstream'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_output_routed_upstream'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream
            location: ('input_output_tests.py', 123, 'TestIotHubModuleClient.test_module_output_routed_upstream')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>
          nextitem: <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64 character string]
            location: ('input_output_tests.py', 139, 'TestIotHubModuleClient.test_module_output_routed_upstream_hubevent[64 character string]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eeff5f8> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eeff5f8> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='eventhub' scope='function' baseid='' >
              request: <SubRequest 'eventhub' for <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>>
          finish pytest_fixture_setup --> <adapters.direct_azure_rest.direct_eventhub_api.EventHubApi object at 0x7f0a6eead550> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>>
          finish pytest_fixture_setup --> 64-chars:9DIEB8CY9CJM7YGQLX9NRZVQ08G8JZ7LV150A2DC5IDBLXG8S0QBIF6IAWOHO3G3 [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64 character string]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64 character string]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64 character string]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64 character string]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64 character string]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64 character string]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>
            nextitem: <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='eventhub' scope='function' baseid='' >
              request: <SubRequest 'eventhub' for <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[64 character string]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64 character string]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64 character string]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64 character string]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64 character string]
            location: ('input_output_tests.py', 139, 'TestIotHubModuleClient.test_module_output_routed_upstream_hubevent[64 character string]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>
          nextitem: <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[1K character string]
            location: ('input_output_tests.py', 139, 'TestIotHubModuleClient.test_module_output_routed_upstream_hubevent[1K character string]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6cf04c88> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6cf04c88> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='eventhub' scope='function' baseid='' >
              request: <SubRequest 'eventhub' for <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>>
          finish pytest_fixture_setup --> <adapters.direct_azure_rest.direct_eventhub_api.EventHubApi object at 0x7f0a6f7f2da0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>>
          finish pytest_fixture_setup --> 1K-charshook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[1K character string]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[1K character string]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[1K character string]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[1K character string]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[1K character string]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[1K character string]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>
            nextitem: <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='eventhub' scope='function' baseid='' >
              request: <SubRequest 'eventhub' for <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[1K character string]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[1K character string]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[1K character string]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[1K character string]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[1K character string]
            location: ('input_output_tests.py', 139, 'TestIotHubModuleClient.test_module_output_routed_upstream_hubevent[1K character string]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>
          nextitem: <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[2000 character string]
            location: ('input_output_tests.py', 139, 'TestIotHubModuleClient.test_module_output_routed_upstream_hubevent[2000 character string]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ef22e10> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ef22e10> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='eventhub' scope='function' baseid='' >
              request: <SubRequest 'eventhub' for <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>>
          finish pytest_fixture_setup --> <adapters.direct_azure_rest.direct_eventhub_api.EventHubApi object at 0x7f0a6ef22518> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>>
          finish pytest_fixture_setup --> 2000-charshook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[2000 character string]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[2000 character string]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[2000 character string]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[2000 character string]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[2000 character string]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[2000 character string]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>
            nextitem: <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='eventhub' scope='function' baseid='' >
              request: <SubRequest 'eventhub' for <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[2000 character string]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[2000 character string]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[2000 character string]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[2000 character string]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[2000 character string]
            location: ('input_output_tests.py', 139, 'TestIotHubModuleClient.test_module_output_routed_upstream_hubevent[2000 character string]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>
          nextitem: <Function 'test_module_output_routed_upstream_hubevent[simple object]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64k character string]
            location: ('input_output_tests.py', 139, 'TestIotHubModuleClient.test_module_output_routed_upstream_hubevent[64k character string]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eeff780> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eeff780> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='eventhub' scope='function' baseid='' >
              request: <SubRequest 'eventhub' for <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>>
          finish pytest_fixture_setup --> <adapters.direct_azure_rest.direct_eventhub_api.EventHubApi object at 0x7f0a6eeadda0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>>
          finish pytest_fixture_setup --> 64K-charshook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64k character string]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64k character string]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64k character string]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64k character string]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64k character string]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64k character string]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>
            nextitem: <Function 'test_module_output_routed_upstream_hubevent[simple object]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='eventhub' scope='function' baseid='' >
              request: <SubRequest 'eventhub' for <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[64k character string]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64k character string]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64k character string]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64k character string]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[64k character string]
            location: ('input_output_tests.py', 139, 'TestIotHubModuleClient.test_module_output_routed_upstream_hubevent[64k character string]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_output_routed_upstream_hubevent[simple object]'>
          nextitem: <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object]
            location: ('input_output_tests.py', 139, 'TestIotHubModuleClient.test_module_output_routed_upstream_hubevent[simple object]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[simple object]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_output_routed_upstream_hubevent[simple object]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_output_routed_upstream_hubevent[simple object]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_output_routed_upstream_hubevent[simple object]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eea43c8> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[simple object]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eea43c8> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='eventhub' scope='function' baseid='' >
              request: <SubRequest 'eventhub' for <Function 'test_module_output_routed_upstream_hubevent[simple object]'>>
          finish pytest_fixture_setup --> <adapters.direct_azure_rest.direct_eventhub_api.EventHubApi object at 0x7f0a6f7db048> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_output_routed_upstream_hubevent[simple object]'>>
          finish pytest_fixture_setup --> [hook]
              64_chars: 011BWWPG6Y6B7ES3K3A99E154WILB875QAT94N6ZKVRQIM2OLHFJ0L54X4ALBJWW
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[simple object]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[simple object]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_output_routed_upstream_hubevent[simple object]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[simple object]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[simple object]'>
            nextitem: <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_output_routed_upstream_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='eventhub' scope='function' baseid='' >
              request: <SubRequest 'eventhub' for <Function 'test_module_output_routed_upstream_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_output_routed_upstream_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_output_routed_upstream_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_output_routed_upstream_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[simple object]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object]
            location: ('input_output_tests.py', 139, 'TestIotHubModuleClient.test_module_output_routed_upstream_hubevent[simple object]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>
          nextitem: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object, as string]
            location: ('input_output_tests.py', 139, 'TestIotHubModuleClient.test_module_output_routed_upstream_hubevent[simple object, as string]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6f9ed780> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6f9ed780> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='eventhub' scope='function' baseid='' >
              request: <SubRequest 'eventhub' for <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>>
          finish pytest_fixture_setup --> <adapters.direct_azure_rest.direct_eventhub_api.EventHubApi object at 0x7f0a6f7d1208> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>>
          finish pytest_fixture_setup --> {"64_chars": "011BWWPG6Y6B7ES3K3A99E154WILB875QAT94N6ZKVRQIM2OLHFJ0L54X4ALBJWW"} [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object, as string]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object, as string]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object, as string]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object, as string]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object, as string]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object, as string]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>
            nextitem: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='eventhub' scope='function' baseid='' >
              request: <SubRequest 'eventhub' for <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[simple object, as string]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object, as string]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object, as string]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object, as string]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[simple object, as string]
            location: ('input_output_tests.py', 139, 'TestIotHubModuleClient.test_module_output_routed_upstream_hubevent[simple object, as string]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>
          nextitem: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers]
            location: ('input_output_tests.py', 139, 'TestIotHubModuleClient.test_module_output_routed_upstream_hubevent[object with 3 layers]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eeade80> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eeade80> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='eventhub' scope='function' baseid='' >
              request: <SubRequest 'eventhub' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>>
          finish pytest_fixture_setup --> <adapters.direct_azure_rest.direct_eventhub_api.EventHubApi object at 0x7f0a6ef0d358> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>>
          finish pytest_fixture_setup --> [hook]
              layer_1_string: 1:ZSULNWNL5TH8J3CAMZIUH7611DCRJ56XC59RJNLDSU89MGGV5WHKWKZ4J9IG6ZWF
              layer_2: {'layer_2_string': '2:Q9EDOBFDS7AQLQNTNB57HAIAW74DGTWV89CO1OIVEV9QHZKQDNPKIF970ZBTUCA5', 'layer3': {'fake_number': 3, 'fake_real_number': 1.87}}
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>
            nextitem: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='eventhub' scope='function' baseid='' >
              request: <SubRequest 'eventhub' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers]
            location: ('input_output_tests.py', 139, 'TestIotHubModuleClient.test_module_output_routed_upstream_hubevent[object with 3 layers]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>
          nextitem: <Function 'test_module_input_output_loopback'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers, as string]
            location: ('input_output_tests.py', 139, 'TestIotHubModuleClient.test_module_output_routed_upstream_hubevent[object with 3 layers, as string]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6f804198> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6f804198> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='eventhub' scope='function' baseid='' >
              request: <SubRequest 'eventhub' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_setup --> <adapters.direct_azure_rest.direct_eventhub_api.EventHubApi object at 0x7f0a6f7eb470> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_setup --> {"layer_1_string": "1:ZSULNWNL5TH8J3CAMZIUH7611DCRJ56XC59RJNLDSU89MGGV5WHKWKZ4J9IG6ZWF", "layer_2": {"layer_2_string": "2:Q9EDOBFDS7AQLQNTNB57HAIAW74DGTWV89CO1OIVEV9QHZKQDNPKIF970ZBTUCA5", "layer3": {"fake_number": 3, "fake_real_number": 1.87}}} [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers, as string]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers, as string]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers, as string]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers, as string]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers, as string]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers, as string]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>
            nextitem: <Function 'test_module_input_output_loopback'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='eventhub' scope='function' baseid='' >
              request: <SubRequest 'eventhub' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_output_routed_upstream_hubevent[object with 3 layers, as string]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers, as string]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers, as string]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers, as string]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_output_routed_upstream_hubevent[object with 3 layers, as string]
            location: ('input_output_tests.py', 139, 'TestIotHubModuleClient.test_module_output_routed_upstream_hubevent[object with 3 layers, as string]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_input_output_loopback'>
          nextitem: <Function 'test_module_input_output_loopback_hubevent[64 character string]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback
            location: ('input_output_tests.py', 158, 'TestIotHubModuleClient.test_module_input_output_loopback')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_input_output_loopback'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_input_output_loopback'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_input_output_loopback'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_input_output_loopback'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ef04c50> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6ef04c50> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_string' scope='function' baseid='' >
              request: <SubRequest 'test_string' for <Function 'test_module_input_output_loopback'>>
          finish pytest_fixture_setup --> String1:POQP5UR7JCJ5VQOSUL2IWRGZ4F6GL71MVKC6L5K1RE4K0ARSOFJMWWKO7OHPSIYE [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='logger' scope='function' baseid='' >
              request: <SubRequest 'logger' for <Function 'test_module_input_output_loopback'>>
          finish pytest_fixture_setup --> <function print_message at 0x7f0a711cd400> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_input_output_loopback'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_input_output_loopback'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_input_output_loopback'>
            nextitem: <Function 'test_module_input_output_loopback_hubevent[64 character string]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='logger' scope='function' baseid='' >
              request: <SubRequest 'logger' for <Function 'test_module_input_output_loopback'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_string' scope='function' baseid='' >
              request: <SubRequest 'test_string' for <Function 'test_module_input_output_loopback'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_input_output_loopback'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_input_output_loopback'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_input_output_loopback'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback
            location: ('input_output_tests.py', 158, 'TestIotHubModuleClient.test_module_input_output_loopback')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_input_output_loopback_hubevent[64 character string]'>
          nextitem: <Function 'test_module_input_output_loopback_hubevent[1K character string]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64 character string]
            location: ('input_output_tests.py', 178, 'TestIotHubModuleClient.test_module_input_output_loopback_hubevent[64 character string]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[64 character string]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_input_output_loopback_hubevent[64 character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_input_output_loopback_hubevent[64 character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_input_output_loopback_hubevent[64 character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6f9a8d68> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback_hubevent[64 character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6f9a8d68> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_input_output_loopback_hubevent[64 character string]'>>
          finish pytest_fixture_setup --> 64-chars:9DIEB8CY9CJM7YGQLX9NRZVQ08G8JZ7LV150A2DC5IDBLXG8S0QBIF6IAWOHO3G3 [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='logger' scope='function' baseid='' >
              request: <SubRequest 'logger' for <Function 'test_module_input_output_loopback_hubevent[64 character string]'>>
          finish pytest_fixture_setup --> <function print_message at 0x7f0a711cd400> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[64 character string]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64 character string]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64 character string]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64 character string]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[64 character string]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_input_output_loopback_hubevent[64 character string]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[64 character string]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64 character string]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64 character string]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64 character string]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[64 character string]'>
            nextitem: <Function 'test_module_input_output_loopback_hubevent[1K character string]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='logger' scope='function' baseid='' >
              request: <SubRequest 'logger' for <Function 'test_module_input_output_loopback_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_input_output_loopback_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_input_output_loopback_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_input_output_loopback_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_input_output_loopback_hubevent[64 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[64 character string]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64 character string]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64 character string]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64 character string]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64 character string]
            location: ('input_output_tests.py', 178, 'TestIotHubModuleClient.test_module_input_output_loopback_hubevent[64 character string]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_input_output_loopback_hubevent[1K character string]'>
          nextitem: <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[1K character string]
            location: ('input_output_tests.py', 178, 'TestIotHubModuleClient.test_module_input_output_loopback_hubevent[1K character string]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[1K character string]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_input_output_loopback_hubevent[1K character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_input_output_loopback_hubevent[1K character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_input_output_loopback_hubevent[1K character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6cefca90> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback_hubevent[1K character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6cefca90> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_input_output_loopback_hubevent[1K character string]'>>
          finish pytest_fixture_setup --> 1K-charshook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='logger' scope='function' baseid='' >
              request: <SubRequest 'logger' for <Function 'test_module_input_output_loopback_hubevent[1K character string]'>>
          finish pytest_fixture_setup --> <function print_message at 0x7f0a711cd400> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[1K character string]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[1K character string]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[1K character string]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[1K character string]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[1K character string]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_input_output_loopback_hubevent[1K character string]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[1K character string]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[1K character string]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[1K character string]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[1K character string]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[1K character string]'>
            nextitem: <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='logger' scope='function' baseid='' >
              request: <SubRequest 'logger' for <Function 'test_module_input_output_loopback_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_input_output_loopback_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_input_output_loopback_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_input_output_loopback_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_input_output_loopback_hubevent[1K character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[1K character string]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[1K character string]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[1K character string]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[1K character string]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[1K character string]
            location: ('input_output_tests.py', 178, 'TestIotHubModuleClient.test_module_input_output_loopback_hubevent[1K character string]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>
          nextitem: <Function 'test_module_input_output_loopback_hubevent[64k character string]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[2000 character string]
            location: ('input_output_tests.py', 178, 'TestIotHubModuleClient.test_module_input_output_loopback_hubevent[2000 character string]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eede160> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eede160> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>>
          finish pytest_fixture_setup --> 2000-charshook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='logger' scope='function' baseid='' >
              request: <SubRequest 'logger' for <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>>
          finish pytest_fixture_setup --> <function print_message at 0x7f0a711cd400> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[2000 character string]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[2000 character string]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[2000 character string]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[2000 character string]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[2000 character string]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[2000 character string]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>
            nextitem: <Function 'test_module_input_output_loopback_hubevent[64k character string]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='logger' scope='function' baseid='' >
              request: <SubRequest 'logger' for <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[2000 character string]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[2000 character string]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[2000 character string]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[2000 character string]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[2000 character string]
            location: ('input_output_tests.py', 178, 'TestIotHubModuleClient.test_module_input_output_loopback_hubevent[2000 character string]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_input_output_loopback_hubevent[64k character string]'>
          nextitem: <Function 'test_module_input_output_loopback_hubevent[simple object]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64k character string]
            location: ('input_output_tests.py', 178, 'TestIotHubModuleClient.test_module_input_output_loopback_hubevent[64k character string]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[64k character string]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_input_output_loopback_hubevent[64k character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_input_output_loopback_hubevent[64k character string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_input_output_loopback_hubevent[64k character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eede160> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback_hubevent[64k character string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eede160> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_input_output_loopback_hubevent[64k character string]'>>
          finish pytest_fixture_setup --> 64K-charshook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='logger' scope='function' baseid='' >
              request: <SubRequest 'logger' for <Function 'test_module_input_output_loopback_hubevent[64k character string]'>>
          finish pytest_fixture_setup --> <function print_message at 0x7f0a711cd400> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[64k character string]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64k character string]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64k character string]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64k character string]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[64k character string]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_input_output_loopback_hubevent[64k character string]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[64k character string]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64k character string]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64k character string]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64k character string]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[64k character string]'>
            nextitem: <Function 'test_module_input_output_loopback_hubevent[simple object]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='logger' scope='function' baseid='' >
              request: <SubRequest 'logger' for <Function 'test_module_input_output_loopback_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_input_output_loopback_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_input_output_loopback_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_input_output_loopback_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_input_output_loopback_hubevent[64k character string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[64k character string]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64k character string]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64k character string]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64k character string]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[64k character string]
            location: ('input_output_tests.py', 178, 'TestIotHubModuleClient.test_module_input_output_loopback_hubevent[64k character string]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_input_output_loopback_hubevent[simple object]'>
          nextitem: <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[simple object]
            location: ('input_output_tests.py', 178, 'TestIotHubModuleClient.test_module_input_output_loopback_hubevent[simple object]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[simple object]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_input_output_loopback_hubevent[simple object]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_input_output_loopback_hubevent[simple object]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_input_output_loopback_hubevent[simple object]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6f995ba8> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback_hubevent[simple object]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6f995ba8> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_input_output_loopback_hubevent[simple object]'>>
          finish pytest_fixture_setup --> [hook]
              64_chars: 011BWWPG6Y6B7ES3K3A99E154WILB875QAT94N6ZKVRQIM2OLHFJ0L54X4ALBJWW
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='logger' scope='function' baseid='' >
              request: <SubRequest 'logger' for <Function 'test_module_input_output_loopback_hubevent[simple object]'>>
          finish pytest_fixture_setup --> <function print_message at 0x7f0a711cd400> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[simple object]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[simple object]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[simple object]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[simple object]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[simple object]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_input_output_loopback_hubevent[simple object]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[simple object]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[simple object]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[simple object]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[simple object]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[simple object]'>
            nextitem: <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='logger' scope='function' baseid='' >
              request: <SubRequest 'logger' for <Function 'test_module_input_output_loopback_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_input_output_loopback_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_input_output_loopback_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_input_output_loopback_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_input_output_loopback_hubevent[simple object]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[simple object]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[simple object]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[simple object]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[simple object]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[simple object]
            location: ('input_output_tests.py', 178, 'TestIotHubModuleClient.test_module_input_output_loopback_hubevent[simple object]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>
          nextitem: <Function 'test_module_input_output_loopback_hubevent[object with 3 layers]'>
        pytest_runtest_logstart [hook]
            nodeid: test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[simple object, as string]
            location: ('input_output_tests.py', 178, 'TestIotHubModuleClient.test_module_input_output_loopback_hubevent[simple object, as string]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eede160> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>>
          finish pytest_fixture_setup --> <adapters.rest.rest_module_api.ModuleApi object at 0x7f0a6eede160> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>>
          finish pytest_fixture_setup --> {"64_chars": "011BWWPG6Y6B7ES3K3A99E154WILB875QAT94N6ZKVRQIM2OLHFJ0L54X4ALBJWW"} [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='logger' scope='function' baseid='' >
              request: <SubRequest 'logger' for <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>>
          finish pytest_fixture_setup --> <function print_message at 0x7f0a711cd400> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[simple object, as string]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[simple object, as string]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[simple object, as string]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[simple object, as string]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[simple object, as string]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[simple object, as string]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f0a72d93860>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>
            nextitem: <Function 'test_module_input_output_loopback_hubevent[object with 3 layers]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='logger' scope='function' baseid='' >
              request: <SubRequest 'logger' for <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='body' scope='function' baseid='' >
              request: <SubRequest 'body' for <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='test_edgehub_module.py::TestIotHubModuleClient::()' >
              request: <SubRequest 'client' for <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='test_module' scope='function' baseid='' >
              request: <SubRequest 'test_module' for <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='function_log_fixture' scope='function' baseid='' >
              request: <SubRequest 'function_log_fixture' for <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='__pytest_repeat_step_number' scope='function' baseid='' >
              request: <SubRequest '__pytest_repeat_step_number' for <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_module_input_output_loopback_hubevent[simple object, as string]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_edgehub_module.py::TestIotHubModuleClient::()::test_module_input_output_loopback_hubevent[simple object, as string]' when='teardown' outcome='passed'> [hook]
