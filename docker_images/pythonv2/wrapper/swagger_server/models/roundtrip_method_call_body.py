# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class RoundtripMethodCallBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, request_payload=None, response_payload=None, status_code=None):  # noqa: E501
        """RoundtripMethodCallBody - a model defined in Swagger

        :param request_payload: The request_payload of this RoundtripMethodCallBody.  # noqa: E501
        :type request_payload: object
        :param response_payload: The response_payload of this RoundtripMethodCallBody.  # noqa: E501
        :type response_payload: object
        :param status_code: The status_code of this RoundtripMethodCallBody.  # noqa: E501
        :type status_code: int
        """
        self.swagger_types = {
            'request_payload': object,
            'response_payload': object,
            'status_code': int
        }

        self.attribute_map = {
            'request_payload': 'requestPayload',
            'response_payload': 'responsePayload',
            'status_code': 'statusCode'
        }

        self._request_payload = request_payload
        self._response_payload = response_payload
        self._status_code = status_code

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The roundtripMethodCallBody of this RoundtripMethodCallBody.  # noqa: E501
        :rtype: RoundtripMethodCallBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def request_payload(self):
        """Gets the request_payload of this RoundtripMethodCallBody.

        payload for the request that arrived from the service.  Used to verify that the correct request arrived.  # noqa: E501

        :return: The request_payload of this RoundtripMethodCallBody.
        :rtype: object
        """
        return self._request_payload

    @request_payload.setter
    def request_payload(self, request_payload):
        """Sets the request_payload of this RoundtripMethodCallBody.

        payload for the request that arrived from the service.  Used to verify that the correct request arrived.  # noqa: E501

        :param request_payload: The request_payload of this RoundtripMethodCallBody.
        :type request_payload: object
        """

        self._request_payload = request_payload

    @property
    def response_payload(self):
        """Gets the response_payload of this RoundtripMethodCallBody.

        payload for the response to return to the service.  Used to verify that the correct request arrived.  # noqa: E501

        :return: The response_payload of this RoundtripMethodCallBody.
        :rtype: object
        """
        return self._response_payload

    @response_payload.setter
    def response_payload(self, response_payload):
        """Sets the response_payload of this RoundtripMethodCallBody.

        payload for the response to return to the service.  Used to verify that the correct request arrived.  # noqa: E501

        :param response_payload: The response_payload of this RoundtripMethodCallBody.
        :type response_payload: object
        """

        self._response_payload = response_payload

    @property
    def status_code(self):
        """Gets the status_code of this RoundtripMethodCallBody.

        status code to return to the service  # noqa: E501

        :return: The status_code of this RoundtripMethodCallBody.
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this RoundtripMethodCallBody.

        status code to return to the service  # noqa: E501

        :param status_code: The status_code of this RoundtripMethodCallBody.
        :type status_code: int
        """

        self._status_code = status_code
