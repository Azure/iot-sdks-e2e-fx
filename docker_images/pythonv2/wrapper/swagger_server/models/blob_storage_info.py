# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class BlobStorageInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, blob_name=None, container_name=None, correlation_id=None, host_name=None, sas_token=None):  # noqa: E501
        """BlobStorageInfo - a model defined in Swagger

        :param blob_name: The blob_name of this BlobStorageInfo.  # noqa: E501
        :type blob_name: str
        :param container_name: The container_name of this BlobStorageInfo.  # noqa: E501
        :type container_name: str
        :param correlation_id: The correlation_id of this BlobStorageInfo.  # noqa: E501
        :type correlation_id: str
        :param host_name: The host_name of this BlobStorageInfo.  # noqa: E501
        :type host_name: str
        :param sas_token: The sas_token of this BlobStorageInfo.  # noqa: E501
        :type sas_token: str
        """
        self.swagger_types = {
            'blob_name': str,
            'container_name': str,
            'correlation_id': str,
            'host_name': str,
            'sas_token': str
        }

        self.attribute_map = {
            'blob_name': 'blobName',
            'container_name': 'containerName',
            'correlation_id': 'correlationId',
            'host_name': 'hostName',
            'sas_token': 'sasToken'
        }

        self._blob_name = blob_name
        self._container_name = container_name
        self._correlation_id = correlation_id
        self._host_name = host_name
        self._sas_token = sas_token

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The blobStorageInfo of this BlobStorageInfo.  # noqa: E501
        :rtype: BlobStorageInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blob_name(self):
        """Gets the blob_name of this BlobStorageInfo.

        name of blob to upload  # noqa: E501

        :return: The blob_name of this BlobStorageInfo.
        :rtype: str
        """
        return self._blob_name

    @blob_name.setter
    def blob_name(self, blob_name):
        """Sets the blob_name of this BlobStorageInfo.

        name of blob to upload  # noqa: E501

        :param blob_name: The blob_name of this BlobStorageInfo.
        :type blob_name: str
        """

        self._blob_name = blob_name

    @property
    def container_name(self):
        """Gets the container_name of this BlobStorageInfo.

        name of container in the azure storage host to upload into  # noqa: E501

        :return: The container_name of this BlobStorageInfo.
        :rtype: str
        """
        return self._container_name

    @container_name.setter
    def container_name(self, container_name):
        """Sets the container_name of this BlobStorageInfo.

        name of container in the azure storage host to upload into  # noqa: E501

        :param container_name: The container_name of this BlobStorageInfo.
        :type container_name: str
        """

        self._container_name = container_name

    @property
    def correlation_id(self):
        """Gets the correlation_id of this BlobStorageInfo.

        correlation id to use for upload  # noqa: E501

        :return: The correlation_id of this BlobStorageInfo.
        :rtype: str
        """
        return self._correlation_id

    @correlation_id.setter
    def correlation_id(self, correlation_id):
        """Sets the correlation_id of this BlobStorageInfo.

        correlation id to use for upload  # noqa: E501

        :param correlation_id: The correlation_id of this BlobStorageInfo.
        :type correlation_id: str
        """

        self._correlation_id = correlation_id

    @property
    def host_name(self):
        """Gets the host_name of this BlobStorageInfo.

        name of azure storage host  # noqa: E501

        :return: The host_name of this BlobStorageInfo.
        :rtype: str
        """
        return self._host_name

    @host_name.setter
    def host_name(self, host_name):
        """Sets the host_name of this BlobStorageInfo.

        name of azure storage host  # noqa: E501

        :param host_name: The host_name of this BlobStorageInfo.
        :type host_name: str
        """

        self._host_name = host_name

    @property
    def sas_token(self):
        """Gets the sas_token of this BlobStorageInfo.

        sas token to use to authenticate with azure storage host  # noqa: E501

        :return: The sas_token of this BlobStorageInfo.
        :rtype: str
        """
        return self._sas_token

    @sas_token.setter
    def sas_token(self, sas_token):
        """Sets the sas_token of this BlobStorageInfo.

        sas token to use to authenticate with azure storage host  # noqa: E501

        :param sas_token: The sas_token of this BlobStorageInfo.
        :type sas_token: str
        """

        self._sas_token = sas_token
