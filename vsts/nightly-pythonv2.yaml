name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)
variables:
  Horton.FrameworkRoot: $(Build.SourcesDirectory)

jobs:
- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: $(Horton.Language)
    repo: $(Horton.Repo)
    commit: $(Horton.Commit)
    forced_image: $(Horton.ForcedImage)
    job_tag: py27
    variant: py27
- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: $(Horton.Language)
    repo: $(Horton.Repo)
    commit: $(Horton.Commit)
    forced_image: $(Horton.ForcedImage)
    job_tag: py34
    variant: py34
- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: $(Horton.Language)
    repo: $(Horton.Repo)
    commit: $(Horton.Commit)
    forced_image: $(Horton.ForcedImage)
    job_tag: py35
    variant: py35
- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: $(Horton.Language)
    repo: $(Horton.Repo)
    commit: $(Horton.Commit)
    forced_image: $(Horton.ForcedImage)
    job_tag: py36
    variant: py36
- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: $(Horton.Language)
    repo: $(Horton.Repo)
    commit: $(Horton.Commit)
    forced_image: $(Horton.ForcedImage)
    job_tag: py37
    variant: py37
- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: $(Horton.Language)
    repo: $(Horton.Repo)
    commit: $(Horton.Commit)
    forced_image: $(Horton.ForcedImage)
    job_tag: py38
    variant: py38

- job: "test"
  pool:
      vmImage: 'Ubuntu 16.04'
  dependsOn:
    - "build_py27_container"
    - "build_py34_container"
    - "build_py35_container"
    - "build_py36_container"
    - "build_py37_container"
    - "build_py38_container"
  strategy:
    maxParallel: 10
    matrix:
      py27_iothub_module_and_device_mqtt:   { variant: py27, suite: iothub_module_and_device_mqtt }
      py27_edgehub_module_mqtt:             { variant: py27, suite: edgehub_module_mqtt }
      py27_iothub_module_and_device_mqtt_ws:   { variant: py27, suite: iothub_module_and_device_mqtt_ws }
      py27_edgehub_module_mqtt_ws:             { variant: py27, suite: edgehub_module_mqtt_ws }

      py35_iothub_module_and_device_mqtt:         { variant: py35, suite: iothub_module_and_device_mqtt }
      py35_edgehub_module_mqtt:                   { variant: py35, suite: edgehub_module_mqtt }
      py35_iothub_module_and_device_mqtt_async:   { variant: py35, async: yes, suite: iothub_module_and_device_mqtt }
      py35_edgehub_module_mqtt_async:             { variant: py35, async: yes, suite: edgehub_module_mqtt }
      py35_iothub_module_and_device_mqtt_ws:         { variant: py35, suite: iothub_module_and_device_mqtt_ws }
      py35_edgehub_module_mqtt_ws:                   { variant: py35, suite: edgehub_module_mqtt_ws }
      py35_iothub_module_and_device_mqtt_ws_async:   { variant: py35, async: yes, suite: iothub_module_and_device_mqtt_ws }
      py35_edgehub_module_mqtt_ws_async:             { variant: py35, async: yes, suite: edgehub_module_mqtt_ws }

      py36_iothub_module_and_device_mqtt:         { variant: py36, suite: iothub_module_and_device_mqtt }
      py36_edgehub_module_mqtt:                   { variant: py36, suite: edgehub_module_mqtt }
      py36_iothub_module_and_device_mqtt_async:   { variant: py36, async: yes, suite: iothub_module_and_device_mqtt }
      py36_edgehub_module_mqtt_async:             { variant: py36, async: yes, suite: edgehub_module_mqtt }
      py36_iothub_module_and_device_mqtt_ws:         { variant: py36, suite: iothub_module_and_device_mqtt_ws }
      py36_edgehub_module_mqtt_ws:                   { variant: py36, suite: edgehub_module_mqtt_ws }
      py36_iothub_module_and_device_mqtt_ws_async:   { variant: py36, async: yes, suite: iothub_module_and_device_mqtt_ws }
      py36_edgehub_module_mqtt_ws_async:             { variant: py36, async: yes, suite: edgehub_module_mqtt_ws }

      py37_iothub_module_and_device_mqtt:         { variant: py37, suite: iothub_module_and_device_mqtt }
      py37_edgehub_module_mqtt:                   { variant: py37, suite: edgehub_module_mqtt }
      py37_iothub_module_and_device_mqtt_async:   { variant: py37, async: yes, suite: iothub_module_and_device_mqtt }
      py37_edgehub_module_mqtt_async:             { variant: py37, async: yes, suite: edgehub_module_mqtt }
      py37_iothub_module_and_device_mqtt_ws:         { variant: py37, suite: iothub_module_and_device_mqtt_ws }
      py37_edgehub_module_mqtt_ws:                   { variant: py37, suite: edgehub_module_mqtt_ws }
      py37_iothub_module_and_device_mqtt_ws_async:   { variant: py37, async: yes, suite: iothub_module_and_device_mqtt_ws }
      py37_edgehub_module_mqtt_ws_async:             { variant: py37, async: yes, suite: edgehub_module_mqtt_ws }

      py38_iothub_module_and_device_mqtt:         { variant: py38, suite: iothub_module_and_device_mqtt }
      py38_edgehub_module_mqtt:                   { variant: py38, suite: edgehub_module_mqtt }
      py38_iothub_module_and_device_mqtt_async:   { variant: py38, async: yes, suite: iothub_module_and_device_mqtt }
      py38_edgehub_module_mqtt_async:             { variant: py38, async: yes, suite: edgehub_module_mqtt }
      py38_iothub_module_and_device_mqtt_ws:         { variant: py38, suite: iothub_module_and_device_mqtt_ws }
      py38_edgehub_module_mqtt_ws:                   { variant: py38, suite: edgehub_module_mqtt_ws }
      py38_iothub_module_and_device_mqtt_ws_async:   { variant: py38, async: yes, suite: iothub_module_and_device_mqtt_ws }
      py38_edgehub_module_mqtt_ws_async:             { variant: py38, async: yes, suite: edgehub_module_mqtt_ws }

  steps:
  - template: templates/steps-deploy-and-run-pytest.yaml
    parameters:
      language: $(Horton.Language)
      forced_image: $(Horton.ForcedImage)
      suite: $(suite)
      variant: $(variant)
      async: $(async)

