jobs:
- template: jobs-build-docker-image.yaml
  parameters:
    language: $(Horton.Language)
    repo: $(Horton.Repo)
    commit: $(Horton.Commit)
    forced_image: $(Horton.ForcedImage)

- job: "mqtt"
  displayName: "mqtt"
  strategy:
      maxParallel: 3
      parallel: 8
  dependsOn:
    - 'build_linux_container'
  continueOnError: true

  steps:
  - template: steps-deploy-and-run-pytest.yaml
    parameters:
      language: $(Horton.Language)
      forced_image: $(Horton.ForcedImage)
      suite: "edgehub_module_fi_mqtt"

- job: "mqtt_ws"
  displayName: "mqtt_ws"
  strategy:
      maxParallel: 3
      parallel: 8
  dependsOn:
    - 'build_linux_container'
  continueOnError: true

  steps:
  - template: steps-deploy-and-run-pytest.yaml
    parameters:
      language: $(Horton.Language)
      forced_image: $(Horton.ForcedImage)
      suite: "edgehub_module_fi_mqtt_ws"

- job: "amqp"
  displayName: "amqp"
  strategy:
      maxParallel: 3
      parallel: 8
  dependsOn:
    - 'build_linux_container'
  continueOnError: true

  steps:
  - template: steps-deploy-and-run-pytest.yaml
    parameters:
      language: $(Horton.Language)
      forced_image: $(Horton.ForcedImage)
      suite: "edgehub_module_fi_amqp"

- job: "amqp_ws"
  displayName: "amqp_ws"
  strategy:
    {
      maxParallel: 3,
      parallel: 8
    }
  dependsOn:
    - 'build_linux_container'
  continueOnError: true
  
  steps:
  - template: steps-deploy-and-run-pytest.yaml
    parameters:
      language: $(Horton.Language)
      forced_image: $(Horton.ForcedImage)
      suite: "edgehub_module_fi_amqp_ws"