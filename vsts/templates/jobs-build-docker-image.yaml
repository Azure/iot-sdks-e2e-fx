parameters:
  langauge: ''
  repo: ''
  commit: ''
  forced_image: ''
  job_tag: 'linux'
  variant: ''
  repo_address: $(IOTHUB-E2E-REPO-ADDRESS)
  repo_user: $(IOTHUB-E2E-REPO-USER)
  repo_password: $(IOTHUB-E2E-REPO-PASSWORD)

jobs:
- job: 'build_${{ parameters.job_tag }}_container'
  pool:
    name: $(Horton.Pool)
    vmimage: $(Horton.VmImage)

  steps:

  - template: steps-ensure-e2e-fx-repo.yaml

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'

  - powershell: |
      $BuildImage="yes"
      if ($env:ForcedImage -ne "") {
        $BuildImage="no"
      }
      $NormalizedRepo=$env:Repo
      if ($NormalizedRepo -like 'https://github.com/*') {
        $NormalizedRepo=$NormalizedRepo.Substring('https://github.com/'.length)
      }

      $IsPr = "no"
      $CommitToPass = $env:Commit
      if ("$env:SYSTEM_PULLREQUEST_TARGETBRANCH" -ne "") {
        $CommitToPass = $env:SYSTEM_PULLREQUEST_TARGETBRANCH
        $IsPr = "yes"
      }

      Write-Host "##vso[task.setvariable variable=buildImage]${BuildImage}"
      Write-Host "##vso[task.setvariable variable=NormalizedRepo]${NormalizedRepo}"
      Write-Host "##vso[task.setvariable variable=IsPr]${IsPr}"
      Write-Host "##vso[task.setvariable variable=CommitToPass]${CommitToPass}"
      Write-Host "BuildImage=${BuildImage}"
      Write-Host "NormalizedRepo=${NormalizedRepo}"
      Write-Host "IsPr=${IsPr}"
      Write-Host "CommitToPass=${CommitToPass}"
    displayName: Custom task execution logic
    env:
      Commit: ${{ parameters.commit }}
      ForcedImage: ${{ parameters.forced_image }}
      Repo: ${{ parameters.repo }}
    ignoreLASTEXITCODE: false
    errorActionPreference: Stop
    failOnStderr: true

  - script: |
      cd ${BUILD_SOURCESDIRECTORY} &&
      echo "saving patch from ${CommitToPass} to HEAD" &&
      git diff -p origin/${CommitToPass} --binary > ${AGENT_BUILDDIRECTORY}/patchfile &&
      mkdir -p $(Build.ArtifactStagingDirectory)/${{ parameters.job_tag }} &&
      cp ${AGENT_BUILDDIRECTORY}/patchfile $(Build.ArtifactStagingDirectory)/${{ parameters.job_tag }} &&
      mv ${AGENT_BUILDDIRECTORY}/patchfile ${HORTON_FRAMEWORKROOT}/docker_images/${{ parameters.language }}
    displayName: "create patch for pull request changes"
    condition: and(
        succeeded(), 
        eq(variables['buildImage'],'yes'),
        not(eq(variables['Horton.FrameworkRoot'], variables['Build.SourcesDirectory'])),
        eq(variables['IsPr'],'yes')
        )
    env:
      CommitToPass: $(CommitToPass)

  - powershell: $(Horton.FrameworkRoot)/scripts/install-pyscript-reqs.ps1
    displayName: "pip install requirements.txt"
    condition: and(succeeded(), eq(variables['buildImage'],'yes'))

  - powershell: $(Horton.FrameworkRoot)/scripts/build-docker-image.ps1 ${{ parameters.language }} $(NormalizedRepo) $(CommitToPass) ${{ parameters.variant }}
    displayName: "build docker image ${{ parameters.language }} ${{ parameters.repo }} ${{ parameters.commit }} ${{ parameters.variant }}"
    env: 
      IOTHUB_E2E_REPO_ADDRESS: $(IOTHUB-E2E-REPO-ADDRESS)
      IOTHUB_E2E_REPO_USER: $(IOTHUB-E2E-REPO-USER)
      IOTHUB_E2E_REPO_PASSWORD: $(IOTHUB-E2E-REPO-PASSWORD)
    condition: and(succeeded(), eq(variables['buildImage'],'yes'))

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts'
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)/'
      ArtifactName: 'patch'
    condition: always()
    
