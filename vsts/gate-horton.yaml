name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)
variables:
  Horton.FrameworkRoot: $(Build.SourcesDirectory)
  variant: ''

jobs:

- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: node
    repo: Azure/azure-iot-sdk-node
    commit: master
    job_tag: node
    forced_image: $(Horton.ForcedImage)

- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: c
    repo: Azure/azure-iot-sdk-c
    commit: master
    job_tag: c
    forced_image: $(Horton.ForcedImage)

- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: java
    repo: Azure/azure-iot-sdk-java
    commit: master
    job_tag: java
    forced_image: $(Horton.ForcedImage)

- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: csharp
    repo: Azure/azure-iot-sdk-csharp
    commit: master
    job_tag: csharp
    forced_image: $(Horton.ForcedImage)

- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: pythonv2
    repo: Azure/azure-iot-sdk-python  
    commit: master
    job_tag: pythonv2_27
    forced_image: $(Horton.ForcedImage)
    variant: py27

- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: pythonv2
    repo: Azure/azure-iot-sdk-python  
    commit: master
    job_tag: pythonv2_34
    forced_image: $(Horton.ForcedImage)
    variant: py34

- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: pythonv2
    repo: Azure/azure-iot-sdk-python  
    commit: master
    job_tag: pythonv2_36
    forced_image: $(Horton.ForcedImage)
    variant: py36

- job: "test"
  pool:
      vmImage: 'Ubuntu 16.04'
  dependsOn:
    - "build_node_container"
    - "build_c_container"
    - "build_java_container"
    - "build_csharp_container"
    - "build_pythonv2_27_container"
    - "build_pythonv2_34_container"
    - "build_pythonv2_36_container"

  strategy:
    matrix:
      node_iothub_module_amqp:              { language: node, suite: iothub_module_amqp }
      node_edgehub_module_amqpws:           { language: node, suite: edgehub_module_amqp_ws }
      c_iothub_module_mqtt:                 { language: c, suite: iothub_module_mqtt }
      c_edgehub_module_mqttws:              { language: c, suite: edgehub_module_mqtt_ws }
      java_iothub_module_mqtt:              { language: java, suite: iothub_module_mqtt }
      csharp_iothub_module_mqtt:            { language: csharp, suite: iothub_module_mqtt }
      csharp_edgehub_module_mqttws:         { language: csharp, suite: edgehub_module_mqtt_ws }
      pythonv2_27_edgehub_module_mqtt:                     { language: pythonv2, variant: py27, suite: edgehub_module_mqtt }
      pythonv2_27_iothub_module_and_device_mqtt:           { language: pythonv2, variant: py27, suite: iothub_module_and_device_mqtt }
      pythonv2_34_edgehub_module_mqtt:                     { language: pythonv2, variant: py34, suite: edgehub_module_mqtt }
      pythonv2_34_iothub_module_and_device_mqtt:           { language: pythonv2, variant: py34, suite: iothub_module_and_device_mqtt }
      pythonv2_36_edgehub_module_mqtt:                     { language: pythonv2, variant: py36, suite: edgehub_module_mqtt }
      pythonv2_36_iothub_module_and_device_mqtt:           { language: pythonv2, variant: py36, suite: iothub_module_and_device_mqtt }
      pythonv2_36_iothub_module_and_device_mqtt_async:     { language: pythonv2, variant: py36, suite: iothub_module_and_device_mqtt, async: yes }

  steps:
  - template: templates/steps-deploy-and-run-pytest.yaml
    parameters:
      language: $(language)
      suite: $(suite)
      forced_image: $(Horton.ForcedImage)
      async: $(async)
      variant: $(variant)

