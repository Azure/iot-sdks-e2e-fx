name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)
variables:
  Horton.FrameworkRoot: $(Build.SourcesDirectory)

jobs:

- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: node
    repo: Azure/azure-iot-sdk-node
    commit: master
    job_tag: node
    forced_image: $(Horton.ForcedImage)

- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: c
    repo: Azure/azure-iot-sdk-c
    commit: master
    job_tag: c
    forced_image: $(Horton.ForcedImage)

- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: java
    repo: Azure/azure-iot-sdk-java
    commit: master
    job_tag: java
    forced_image: $(Horton.ForcedImage)

- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: csharp
    repo: Azure/azure-iot-sdk-csharp
    commit: master
    job_tag: csharp
    forced_image: $(Horton.ForcedImage)

- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: pythonv2
    repo: Azure/azure-iot-sdk-python  
    commit: master
    job_tag: py27
    forced_image: $(Horton.ForcedImage)
    variant: py27

- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: pythonv2
    repo: Azure/azure-iot-sdk-python  
    commit: master
    job_tag: py35
    forced_image: $(Horton.ForcedImage)
    variant: py35

- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: pythonv2
    repo: Azure/azure-iot-sdk-python  
    commit: master
    job_tag: py38
    forced_image: $(Horton.ForcedImage)
    variant: py38

- job: "test"
  pool:
      vmImage: 'Ubuntu 16.04'
  dependsOn:
    - "build_node_container"
    - "build_c_container"
    - "build_java_container"
    - "build_csharp_container"
    - "build_py27_container"
    - "build_py35_container"
    - "build_py38_container"

  strategy:
    matrix:
      node_amqp_iothub_module:              { suite: node_amqp_iothub_module }
      node_amqpws_edgehub_module:           { suite: node_amqpws_edgehub_module }
      node_mqttws_edgehub_module:           { suite: node_mqttws_edgehub_module }
      c_mqtt_iothub_module:                 { suite: c_mqtt_iothub_module }
      c_mqttws_edgehub_module:              { suite: c_mqttws_edgehub_module }
      java_mqtt_iothub_module:              { suite: java_mqtt_iothub_module }
      csharp_mqtt_iothub_module:            { suite: csharp_mqtt_iothub_module }
      csharp_mqttws_edgehub_module:         { suite: csharp_mqttws_edgehub_module }
      py27_mqtt_edgehub_module:                     { suite: py27_mqtt_edgehub_module }
      py27_mqtt_iothub_module_and_device:           { suite: py27_mqtt_iothub_module_and_device }
      py35_mqtt_edgehub_module:                     { suite: py35_mqtt_edgehub_module }
      py35_mqtt_iothub_module_and_device:           { suite: py35_mqtt_iothub_module_and_device }
      py38_mqtt_iothub_module_quick_drop:           { suite: py38_mqtt_iothub_module_quick_drop }
      py38_mqtt_iothub_module_and_device_async:     { suite: py38_mqtt_iothub_module_and_device_async }
      py38_mqtt_edgehub_module_async:               { suite: py38_mqtt_edgehub_module_async }

  steps:
  - template: templates/steps-deploy-and-run-pytest.yaml
    parameters:
      suite: $(suite)
      forced_image: $(Horton.ForcedImage)

