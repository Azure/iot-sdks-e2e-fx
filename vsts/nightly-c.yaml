name: $(BuildID)_c_$(BuildDefinitionName)_$(SourceBranchName)
variables:
  Horton.FrameworkRoot: $(Build.SourcesDirectory)

jobs:
- job: "build_linux_amd64"
  pool:
    vmImage: 'Ubuntu 18.04'
  steps:
  - template: templates/steps-build-docker-image.yaml
    parameters:
      language: c

- job: "test_linux_amd64"
  pool:
      vmImage: 'Ubuntu 18.04'
  dependsOn:
    - "build_linux_amd64"
  strategy:
    matrix:
      c_mqtt_iothub_module_and_device:      { suite: c_mqtt_iothub_module_and_device }
      c_mqtt_edgehub_module:                { suite: c_mqtt_edgehub_module }
      c_mqttws_iothub_module_and_device:    { suite: c_mqttws_iothub_module_and_device }
      c_mqttws_edgehub_module:              { suite: c_mqttws_edgehub_module }
      c_amqp_iothub_module_and_device:      { suite: c_amqp_iothub_module_and_device }
      c_amqp_edgehub_module:                { suite: c_amqp_edgehub_module }
      c_amqpws_iothub_module_and_device:    { suite: c_amqpws_iothub_module_and_device }
      c_amqpws_edgehub_module:              { suite: c_amqpws_edgehub_module }
  steps:
  - template: templates/steps-deploy-and-run-pytest.yaml
    parameters:
      forced_image: $(Horton.ForcedImage)
      suite: $(suite)

- job: "tag_lkg_amd64"
  pool:
      vmImage: 'Ubuntu 18.04'
  dependsOn:
     "test_linux_amd64"
  steps:
  - template: templates/steps-tag-lkg.yaml
    parameters:
      language: c

