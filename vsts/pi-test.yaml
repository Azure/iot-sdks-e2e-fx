name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)
variables:
  Horton.FrameworkRoot: $(Build.SourcesDirectory)

jobs:
- job: "build_linux_arm"
  timeoutInMinutes: 120
  pool: "Horton_Raspi_Python"
  strategy:
    matrix:
      py27: { variant: py27 }
      py38: { variant: py38 }
      node8: { variant: node8 }
      c: { language: c }
      csharp: { language: csharp }
  steps:
  - template: templates/steps-build-docker-image.yaml
    parameters:
      variant: $(variant)
      language: $(language)

- job: "test_linux_arm"
  pool: "Horton_Raspi_Python"
  dependsOn:
    - "build_linux_arm"
  strategy:
    matrix:
      py27_mqtt_iothub_module_and_device:     { suite: py27_mqtt_iothub_module_and_device }
      py38_mqtt_iothub_module_and_device:     { suite: py38_mqtt_iothub_module_and_device }
      node8_mqtt_iothub_module_and_device:     { suite: node8_mqtt_iothub_module_and_device }
      c_mqtt_iothub_module_and_device:          { suite: c_mqtt_iothub_module_and_device }
      csharp_mqtt_iothub_module_and_device:     { suite: csharp_mqtt_iothub_module_and_device }
  steps:
  - template: templates/steps-deploy-and-run-pytest.yaml
    parameters:
      forced_image: $(Horton.ForcedImage)
      suite: $(suite)


