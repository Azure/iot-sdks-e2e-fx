variables:
  Horton.FrameworkRoot: $(Build.SourcesDirectory)

jobs:
- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: $(Horton.Language)
    repo: $(Horton.Repo)
    commit: $(Horton.Commit)
    forced_image: $(Horton.ForcedImage)

- job: "test"
  dependsOn:
    - "build_linux_container"
  strategy:
    maxParallel: 4
    matrix:
      aa_hub_module_mqtt: { suite: hub_module_mqtt }
      aa_edge_module_mqtt: { suite: edge_module_mqtt }
      aa_hub_module_mqtt_ws: { suite: hub_module_mqtt_ws }
      aa_edge_module_mqtt_ws: { suite: edge_module_mqtt_ws }
      aa_hub_module_amqp: { suite: hub_module_amqp }
      aa_edge_module_amqp: { suite: edge_module_amqp }
      aa_hub_module_amqp_ws: { suite: hub_module_amqp_ws }
      aa_edge_module_amqp_ws: { suite: edge_module_amqp_ws }
      ab_hub_module_mqtt: { suite: hub_module_mqtt }
      ab_edge_module_mqtt: { suite: edge_module_mqtt }
      ab_hub_module_mqtt_ws: { suite: hub_module_mqtt_ws }
      ab_edge_module_mqtt_ws: { suite: edge_module_mqtt_ws }
      ab_hub_module_amqp: { suite: hub_module_amqp }
      ab_edge_module_amqp: { suite: edge_module_amqp }
      ab_hub_module_amqp_ws: { suite: hub_module_amqp_ws }
      ab_edge_module_amqp_ws: { suite: edge_module_amqp_ws }
      ac_hub_module_mqtt: { suite: hub_module_mqtt }
      ac_edge_module_mqtt: { suite: edge_module_mqtt }
      ac_hub_module_mqtt_ws: { suite: hub_module_mqtt_ws }
      ac_edge_module_mqtt_ws: { suite: edge_module_mqtt_ws }
      ac_hub_module_amqp: { suite: hub_module_amqp }
      ac_edge_module_amqp: { suite: edge_module_amqp }
      ac_hub_module_amqp_ws: { suite: hub_module_amqp_ws }
      ac_edge_module_amqp_ws: { suite: edge_module_amqp_ws }
      ad_hub_module_mqtt: { suite: hub_module_mqtt }
      ad_edge_module_mqtt: { suite: edge_module_mqtt }
      ad_hub_module_mqtt_ws: { suite: hub_module_mqtt_ws }
      ad_edge_module_mqtt_ws: { suite: edge_module_mqtt_ws }
      ad_hub_module_amqp: { suite: hub_module_amqp }
      ad_edge_module_amqp: { suite: edge_module_amqp }
      ad_hub_module_amqp_ws: { suite: hub_module_amqp_ws }
      ad_edge_module_amqp_ws: { suite: edge_module_amqp_ws }
      ae_hub_module_mqtt: { suite: hub_module_mqtt }
      ae_edge_module_mqtt: { suite: edge_module_mqtt }
      ae_hub_module_mqtt_ws: { suite: hub_module_mqtt_ws }
      ae_edge_module_mqtt_ws: { suite: edge_module_mqtt_ws }
      ae_hub_module_amqp: { suite: hub_module_amqp }
      ae_edge_module_amqp: { suite: edge_module_amqp }
      ae_hub_module_amqp_ws: { suite: hub_module_amqp_ws }
      ae_edge_module_amqp_ws: { suite: edge_module_amqp_ws }
      ba_hub_module_mqtt: { suite: hub_module_mqtt }
      ba_edge_module_mqtt: { suite: edge_module_mqtt }
      ba_hub_module_mqtt_ws: { suite: hub_module_mqtt_ws }
      ba_edge_module_mqtt_ws: { suite: edge_module_mqtt_ws }
      ba_hub_module_amqp: { suite: hub_module_amqp }
      ba_edge_module_amqp: { suite: edge_module_amqp }
      ba_hub_module_amqp_ws: { suite: hub_module_amqp_ws }
      ba_edge_module_amqp_ws: { suite: edge_module_amqp_ws }
      bb_hub_module_mqtt: { suite: hub_module_mqtt }
      bb_edge_module_mqtt: { suite: edge_module_mqtt }
      bb_hub_module_mqtt_ws: { suite: hub_module_mqtt_ws }
      bb_edge_module_mqtt_ws: { suite: edge_module_mqtt_ws }
      bb_hub_module_amqp: { suite: hub_module_amqp }
      bb_edge_module_amqp: { suite: edge_module_amqp }
      bb_hub_module_amqp_ws: { suite: hub_module_amqp_ws }
      bb_edge_module_amqp_ws: { suite: edge_module_amqp_ws }
      bc_hub_module_mqtt: { suite: hub_module_mqtt }
      bc_edge_module_mqtt: { suite: edge_module_mqtt }
      bc_hub_module_mqtt_ws: { suite: hub_module_mqtt_ws }
      bc_edge_module_mqtt_ws: { suite: edge_module_mqtt_ws }
      bc_hub_module_amqp: { suite: hub_module_amqp }
      bc_edge_module_amqp: { suite: edge_module_amqp }
      bc_hub_module_amqp_ws: { suite: hub_module_amqp_ws }
      bc_edge_module_amqp_ws: { suite: edge_module_amqp_ws }
      bd_hub_module_mqtt: { suite: hub_module_mqtt }
      bd_edge_module_mqtt: { suite: edge_module_mqtt }
      bd_hub_module_mqtt_ws: { suite: hub_module_mqtt_ws }
      bd_edge_module_mqtt_ws: { suite: edge_module_mqtt_ws }
      bd_hub_module_amqp: { suite: hub_module_amqp }
      bd_edge_module_amqp: { suite: edge_module_amqp }
      bd_hub_module_amqp_ws: { suite: hub_module_amqp_ws }
      bd_edge_module_amqp_ws: { suite: edge_module_amqp_ws }
      be_hub_module_mqtt: { suite: hub_module_mqtt }
      be_edge_module_mqtt: { suite: edge_module_mqtt }
      be_hub_module_mqtt_ws: { suite: hub_module_mqtt_ws }
      be_edge_module_mqtt_ws: { suite: edge_module_mqtt_ws }
      be_hub_module_amqp: { suite: hub_module_amqp }
      be_edge_module_amqp: { suite: edge_module_amqp }
      be_hub_module_amqp_ws: { suite: hub_module_amqp_ws }
      be_edge_module_amqp_ws: { suite: edge_module_amqp_ws }

  steps:
  - template: templates/steps-deploy-and-run-pytest.yaml
    parameters:
      language: $(Horton.Language)
      forced_image: $(Horton.ForcedImage)
      suite: $(suite)

