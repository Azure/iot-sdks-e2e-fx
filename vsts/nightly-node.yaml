name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)
variables:
  Horton.FrameworkRoot: $(Build.SourcesDirectory)

jobs:
- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: $(Horton.Language)
    repo: $(Horton.Repo)
    commit: $(Horton.Commit)
    job_tag: node6
    variant: node6
- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: $(Horton.Language)
    repo: $(Horton.Repo)
    commit: $(Horton.Commit)
    job_tag: node8
    variant: node8
- template: templates/jobs-build-docker-image.yaml
  parameters:
    language: $(Horton.Language)
    repo: $(Horton.Repo)
    commit: $(Horton.Commit)
    job_tag: node10
    variant: node10

- job: "test_node6"
  pool:
      vmImage: 'Ubuntu 16.04'
  dependsOn:
    - "build_node6_container"
  strategy:
    matrix:
      iothub_module_mqtt_node6: { suite: iothub_module_mqtt }
      edgehub_module_mqtt_node6: { suite: edgehub_module_mqtt }
      iothub_module_mqtt_ws_node6: { suite: iothub_module_mqtt_ws }
      edgehub_module_mqtt_ws_node6: { suite: edgehub_module_mqtt_ws }
      iothub_module_amqp_node6: { suite: iothub_module_amqp }
      edgehub_module_amqp_node6: { suite: edgehub_module_amqp }
      iothub_module_amqp_ws_node6: { suite: iothub_module_amqp_ws }
      edgehub_module_amqp_ws_node6: { suite: edgehub_module_amqp_ws }
  steps:
  - template: templates/steps-deploy-and-run-pytest.yaml
    parameters:
      language: $(Horton.Language)
      forced_image: $(Horton.ForcedImage)
      suite: $(suite)
      variant: node6

- job: "test_node8"
  pool:
      vmImage: 'Ubuntu 16.04'
  dependsOn:
    - "build_node8_container"
  strategy:
    matrix:
      iothub_module_mqtt_node8: { suite: iothub_module_mqtt }
      edgehub_module_mqtt_node8: { suite: edgehub_module_mqtt }
      iothub_module_mqtt_ws_node8: { suite: iothub_module_mqtt_ws }
      edgehub_module_mqtt_ws_node8: { suite: edgehub_module_mqtt_ws }
      iothub_module_amqp_node8: { suite: iothub_module_amqp }
      edgehub_module_amqp_node8: { suite: edgehub_module_amqp }
      iothub_module_amqp_ws_node8: { suite: iothub_module_amqp_ws }
      edgehub_module_amqp_ws_node8: { suite: edgehub_module_amqp_ws }
  steps:
  - template: templates/steps-deploy-and-run-pytest.yaml
    parameters:
      language: $(Horton.Language)
      forced_image: $(Horton.ForcedImage)
      suite: $(suite)
      variant: node8


- job: "test_node10"
  pool:
      vmImage: 'Ubuntu 16.04'
  dependsOn:
    - "build_node10_container"
  strategy:
    matrix:
      iothub_module_mqtt_node10: { suite: iothub_module_mqtt }
      edgehub_module_mqtt_node10: { suite: edgehub_module_mqtt }
      iothub_module_mqtt_ws_node10: { suite: iothub_module_mqtt_ws }
      edgehub_module_mqtt_ws_node10: { suite: edgehub_module_mqtt_ws }
      iothub_module_amqp_node10: { suite: iothub_module_amqp }
      edgehub_module_amqp_node10: { suite: edgehub_module_amqp }
      iothub_module_amqp_ws_node10: { suite: iothub_module_amqp_ws }
      edgehub_module_amqp_ws_node10: { suite: edgehub_module_amqp_ws }
  steps:
  - template: templates/steps-deploy-and-run-pytest.yaml
    parameters:
      language: $(Horton.Language)
      forced_image: $(Horton.ForcedImage)
      suite: $(suite)
      variant: node10


