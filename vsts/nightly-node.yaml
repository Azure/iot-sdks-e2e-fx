name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)
variables:
  Horton.FrameworkRoot: $(Build.SourcesDirectory)

jobs:
- job: "build_linux_amd64"
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      node18:  { variant: node18 }
  steps:
  - template: templates/steps-build-docker-image.yaml
    parameters:
      variant: $(variant)

- job: "test_linux_amd64"
  pool:
      vmImage: 'ubuntu-latest'
  dependsOn:
    - "build_linux_amd64"
  strategy:
    matrix:
      node18_mqtt_iothub_module_and_device:      { suite: node18_mqtt_iothub_module_and_device }
      node18_mqtt_edgehub_module:                { suite: node18_mqtt_edgehub_module }
      node18_mqttws_iothub_module_and_device:    { suite: node18_mqttws_iothub_module_and_device }
      node18_mqttws_edgehub_module:              { suite: node18_mqttws_edgehub_module }
      node18_amqp_iothub_module_and_device:      { suite: node18_amqp_iothub_module_and_device }
      node18_amqp_edgehub_module:                { suite: node18_amqp_edgehub_module }
      node18_amqpws_iothub_module_and_device:    { suite: node18_amqpws_iothub_module_and_device }
      node18_amqpws_edgehub_module:              { suite: node18_amqpws_edgehub_module }

  steps:
  - template: templates/steps-deploy-and-run-pytest.yaml
    parameters:
      forced_image: $(Horton.ForcedImage)
      suite: $(suite)

- job: "tag_lkg_amd64"
  pool:
      vmImage: 'ubuntu-latest'
  dependsOn:
     "test_linux_amd64"
  steps:
  - template: templates/steps-tag-lkg.yaml
    parameters:
      language: node

