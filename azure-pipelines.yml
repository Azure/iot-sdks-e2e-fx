# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'vs2017-win2016'

steps:
- powershell: |
    cd ci-wrappers/csharp/wrapper/src
    dotnet remove edge-e2e.csproj reference ../../sdk/iothub/device/src/Microsoft.Azure.Devices.Client.csproj
    dotnet remove edge-e2e.csproj reference ../../sdk/iothub/service/src/Microsoft.Azure.Devices.csproj
    dotnet remove edge-e2e.csproj reference ../../sdk/shared/src/Microsoft.Azure.Devices.Shared.csproj
    dotnet add edge-e2e.csproj package Microsoft.Azure.Devices.Client
    dotnet add edge-e2e.csproj package Microsoft.Azure.Devices
    dotnet add edge-e2e.csproj package Microsoft.Azure.Devices.Shared
    dotnet build edge-e2e.csproj
  displayName: 'csharp pre-scan task - pull in dependencies'
- task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
  displayName: 'Component Detection'
- task: securedevelopmentteam.vss-secure-development-tools.build-task-credscan.CredScan@2
  displayName: 'Run CredScan'
  inputs:
    debugMode: false
- task: securedevelopmentteam.vss-secure-development-tools.build-task-policheck.PoliCheck@1
  displayName: 'Run PoliCheck'
  inputs:
    targetType: F
- task: securedevelopmentteam.vss-secure-development-tools.build-task-postanalysis.PostAnalysis@1
  displayName: 'Post Analysis'
  inputs:
    CredScan: true
    PoliCheck: true
